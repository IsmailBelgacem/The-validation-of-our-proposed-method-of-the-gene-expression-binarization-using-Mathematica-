(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    329791,       6107]
NotebookOptionsPosition[    277292,       5141]
NotebookOutlinePosition[    323645,       5996]
CellTagsIndexPosition[    323602,       5993]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
An  Experience Binarization and validation using ODE simulation of an \
artificial Boolean network Model\
\>", "Title",
 CellChangeTimes->{{3.8731830829318295`*^9, 3.8731830982118654`*^9}, 
   3.873371110762186*^9, {3.873371150883339*^9, 3.873371153781639*^9}, {
   3.875110425962532*^9, 3.875110446528749*^9}, {3.875110491384411*^9, 
   3.875110515735311*^9}, {3.87708927178753*^9, 3.877089277346257*^9}, {
   3.92529343012507*^9, 3.9252934644779*^9}, 3.9252935254277487`*^9, {
   3.9253598701551113`*^9, 
   3.925359904804215*^9}},ExpressionUUID->"fc3a36f3-4f2d-4aee-b806-\
a1a93b7e19cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.873371391789506*^9, 3.873371451305375*^9}, 
   3.8733716959203*^9, {3.876991563602678*^9, 3.8769915667595606`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"12191517-2d3a-454a-95ad-50cc0a6382b2"],

Cell[BoxData[
 RowBox[{"<<", "Booned`"}]], "Input",
 CellChangeTimes->{{3.8731874436719046`*^9, 3.87318745196244*^9}, {
  3.89001590572797*^9, 3.890015915206796*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4a3c0ec0-a87a-456b-8e1a-c8355dfb2a57"],

Cell[BoxData[
 RowBox[{"<<", "Bi4Back`"}]], "Input",
 CellChangeTimes->{{3.876987937785259*^9, 3.8769879459489126`*^9}, {
   3.877440573080106*^9, 3.877440582529254*^9}, {3.877440834132324*^9, 
   3.8774408442906322`*^9}, {3.877503583635017*^9, 3.877503587403099*^9}, {
   3.8775048394161673`*^9, 3.877504847501192*^9}, {3.8775050928359213`*^9, 
   3.877505095663665*^9}, {3.8775053639021387`*^9, 3.877505365988338*^9}, {
   3.8788203467431517`*^9, 3.8788203503330603`*^9}, {3.878820569816285*^9, 
   3.878820572334854*^9}, {3.879164565849904*^9, 3.879164569187439*^9}, {
   3.87925703460185*^9, 3.879257041502345*^9}, {3.879259627659358*^9, 
   3.879259633084738*^9}, {3.8793424974232*^9, 3.87934249954073*^9}, {
   3.880178010664212*^9, 3.880178014211523*^9}, {3.880194591245153*^9, 
   3.880194593380032*^9}, {3.880194826664988*^9, 3.8801948301058683`*^9}, {
   3.880195838737975*^9, 3.88019584142033*^9}, 3.8847825941904488`*^9, 
   3.884782860703732*^9, 3.8847829143270884`*^9, 3.884784841038553*^9, 
   3.884784934612772*^9, 3.8848436058795357`*^9, 3.884843721285737*^9, {
   3.889260434435523*^9, 3.88926043520948*^9}, {3.889260713836939*^9, 
   3.889260714371434*^9}, 3.889437170678611*^9, 3.889437327376058*^9, 
   3.8894394891275187`*^9, 3.88943981607648*^9, 3.889442587024827*^9, {
   3.889501896639007*^9, 3.889501897095529*^9}, {3.8895023542645884`*^9, 
   3.889502376569948*^9}, {3.890015908499377*^9, 3.890015917753723*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"43afe147-ddde-4df7-ac34-a5fd2c07641d"],

Cell[BoxData[
 RowBox[{"<<", "Functionsneededpackage`"}]], "Input",
 CellChangeTimes->{{3.876987937785259*^9, 3.8769879459489126`*^9}, {
   3.877440573080106*^9, 3.877440582529254*^9}, {3.877440834132324*^9, 
   3.8774408442906322`*^9}, {3.877503583635017*^9, 3.877503587403099*^9}, {
   3.8775048394161673`*^9, 3.877504847501192*^9}, {3.8775050928359213`*^9, 
   3.877505095663665*^9}, {3.8775053639021387`*^9, 3.877505365988338*^9}, {
   3.8788203467431517`*^9, 3.8788203503330603`*^9}, {3.878820569816285*^9, 
   3.878820572334854*^9}, {3.879164565849904*^9, 3.879164569187439*^9}, {
   3.87925703460185*^9, 3.879257041502345*^9}, {3.879259627659358*^9, 
   3.879259633084738*^9}, {3.8793424974232*^9, 3.87934249954073*^9}, {
   3.880178010664212*^9, 3.880178014211523*^9}, {3.880194591245153*^9, 
   3.880194593380032*^9}, {3.880194826664988*^9, 3.8801948301058683`*^9}, {
   3.880195838737975*^9, 3.88019584142033*^9}, 3.8847825941904488`*^9, 
   3.884782860703732*^9, 3.8847829143270884`*^9, 3.884784841038553*^9, 
   3.884784934612772*^9, 3.8848436058795357`*^9, 3.884843721285737*^9, {
   3.889260434435523*^9, 3.88926043520948*^9}, {3.889260713836939*^9, 
   3.889260714371434*^9}, 3.889437170678611*^9, 3.889437327376058*^9, 
   3.8894394891275187`*^9, 3.88943981607648*^9, 3.889442587024827*^9, {
   3.889501896639007*^9, 3.889501897095529*^9}, {3.8895023542645884`*^9, 
   3.889502376569948*^9}, {3.890015908499377*^9, 3.890015917753723*^9}, 
   3.925282062026189*^9, 3.925292486767808*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"931eb123-dece-4943-bd1f-c2ee0b5e66fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Unprotect", "[", "t", "]"}], ";", 
  RowBox[{"Clear", "[", "t", "]"}], ";", 
  RowBox[{"Protect", "[", "t", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.875170929722845*^9, 3.8751709405419884`*^9}, 
   3.876894744844416*^9, {3.8781992060234*^9, 3.878199210056409*^9}, {
   3.925281865564698*^9, 3.925281868833042*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"b0917b2a-0814-4397-9008-e6681c4e4c52"],

Cell[CellGroupData[{

Cell["RESEAU BOOLEEN EXEMPLE", "Section",
 CellChangeTimes->{{3.873186541645221*^9, 
  3.8731865496890388`*^9}},ExpressionUUID->"1ed3ea38-67d5-460c-b364-\
314f8922e507"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FB", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x1", "\[Rule]", 
     RowBox[{"x4", "&&", "x3", "&&", "x5"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"x2", "\[Rule]", "x1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"x3", "\[Rule]", 
     RowBox[{"!", "x2"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"x4", "\[Rule]", "x2"}], ",", "\[IndentingNewLine]", 
    RowBox[{"x5", "\[Rule]", 
     RowBox[{"x3", "&&", 
      RowBox[{"!", "x4"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.880435096973867*^9, {3.925293487203981*^9, 3.925293498709709*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2f1d5f78-cf67-4e98-88c5-47fc1fe23358"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", 
    RowBox[{"x4", "&&", "x3", "&&", "x5"}]}], ",", 
   RowBox[{"x2", "\[Rule]", "x1"}], ",", 
   RowBox[{"x3", "\[Rule]", 
    RowBox[{"!", "x2"}]}], ",", 
   RowBox[{"x4", "\[Rule]", "x2"}], ",", 
   RowBox[{"x5", "\[Rule]", 
    RowBox[{"x3", "&&", 
     RowBox[{"!", "x4"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.925294668192452*^9, 3.925294737628449*^9, 3.925294900749388*^9, 
   3.925298189944532*^9, 3.9252982231995983`*^9, 3.9252983714589787`*^9, 
   3.925298590078281*^9, 3.925298647469944*^9, 3.925298760753958*^9, 
   3.925301384673911*^9, 3.925301414821786*^9, 3.925301578842256*^9, {
   3.9253029113695707`*^9, 3.925302962702846*^9}, 3.925304058814867*^9, 
   3.925359933417425*^9, {3.925360056724687*^9, 3.925360098856005*^9}, 
   3.9253634382044363`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"3b45e12e-7223-4069-a205-d70d3bd3d5f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquilibria", "@", 
  RowBox[{"ModelOf", "[", "FB", "]"}]}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"726a9199-195d-4e4b-b98f-cabd1427ef87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "False"}], ",", 
     RowBox[{"x2", "\[Rule]", "False"}], ",", 
     RowBox[{"x3", "\[Rule]", "True"}], ",", 
     RowBox[{"x4", "\[Rule]", "False"}], ",", 
     RowBox[{"x5", "\[Rule]", "True"}]}], "}"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.925294668214778*^9, 3.925294737661092*^9, 3.9252949007691813`*^9, 
   3.925298189959638*^9, 3.925298223234849*^9, 3.92529837148825*^9, 
   3.92529859011466*^9, 3.92529864750354*^9, 3.925298760785202*^9, 
   3.9253013847046003`*^9, 3.92530141485588*^9, 3.925301578862047*^9, {
   3.925302911406876*^9, 3.9253029627128897`*^9}, 3.925304058846878*^9, 
   3.9253599334551272`*^9, {3.925360056755349*^9, 3.925360098884054*^9}, 
   3.925363438226509*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"2a40171f-93ae-4eb6-acbe-2c7a26ad95df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StableFB", "=", 
  RowBox[{"Association", "/@", 
   RowBox[{"StableStates", "[", "FB", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.875174866917273*^9, 3.875174889909378*^9}, {
  3.875332328718902*^9, 3.875332334922542*^9}, {3.875332371687356*^9, 
  3.875332372466054*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"e7584e09-2758-4e6d-922d-bd8515d5be73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"x1", "\[Rule]", "False"}], ",", 
    RowBox[{"x2", "\[Rule]", "False"}], ",", 
    RowBox[{"x3", "\[Rule]", "True"}], ",", 
    RowBox[{"x4", "\[Rule]", "False"}], ",", 
    RowBox[{"x5", "\[Rule]", "True"}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.92529466822087*^9, 3.925294737667729*^9, 3.925294900787899*^9, 
   3.9252981899684267`*^9, 3.925298223241218*^9, 3.9252983714945707`*^9, 
   3.925298590120826*^9, 3.925298647537952*^9, 3.925298760791218*^9, 
   3.925301384711531*^9, 3.925301414862603*^9, 3.925301578869431*^9, {
   3.9253029114137383`*^9, 3.925302962742144*^9}, 3.925304058853891*^9, 
   3.925359933490676*^9, {3.925360056760766*^9, 3.925360098890783*^9}, 
   3.925363438245181*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"16363cd9-9331-4f04-960c-14382989c614"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IG", "=", 
  RowBox[{"NiceIG", "[", 
   RowBox[{"InteractionGraphSimple", "[", "FB", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.88382397763933*^9, 3.883824003359702*^9}, {
  3.88382404957668*^9, 3.883824049806725*^9}, {3.92529411486705*^9, 
  3.925294129697873*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e51dc69c-0893-4355-8d3a-6f75aa8c1b9c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`x1, $CellContext`x2, $CellContext`x3, \
$CellContext`x4, $CellContext`x5}, {{{1, 2}, {2, 3}, {2, 4}, {3, 1}, {3, 5}, {
       4, 1}, {4, 5}, {5, 1}}, Null}, {
      EdgeLabels -> {None}, EdgeShapeFunction -> {
         GraphComputation`GraphElementData[{"Arrow", "ArrowSize" -> 0.07}]}, 
       EdgeStyle -> {
        DirectedEdge[$CellContext`x3, $CellContext`x1] -> Directive[
           RGBColor[0, 0.5700000000000001, 0], 
           Thickness[Large]], DirectedEdge[$CellContext`x4, $CellContext`x1] -> 
         Directive[
           RGBColor[0, 0.5700000000000001, 0], 
           Thickness[Large]], DirectedEdge[$CellContext`x2, $CellContext`x4] -> 
         Directive[
           RGBColor[0, 0.5700000000000001, 0], 
           Thickness[Large]], DirectedEdge[$CellContext`x4, $CellContext`x5] -> 
         Directive[
           RGBColor[
            Rational[2, 3], 0, 0], 
           Thickness[Large]], DirectedEdge[$CellContext`x3, $CellContext`x5] -> 
         Directive[
           RGBColor[0, 0.5700000000000001, 0], 
           Thickness[Large]], DirectedEdge[$CellContext`x5, $CellContext`x1] -> 
         Directive[
           RGBColor[0, 0.5700000000000001, 0], 
           Thickness[Large]], DirectedEdge[$CellContext`x1, $CellContext`x2] -> 
         Directive[
           RGBColor[0, 0.5700000000000001, 0], 
           Thickness[Large]], DirectedEdge[$CellContext`x2, $CellContext`x3] -> 
         Directive[
           RGBColor[
            Rational[2, 3], 0, 0], 
           Thickness[Large]]}, EdgeWeight -> {1, -1, 1, 1, 1, 1, -1, 1}, 
       ImageMargins -> All, ImagePadding -> 25, ImageSize -> Automatic, 
       VertexLabels -> {"Name"}, VertexLabelStyle -> {
         Directive[FontFamily -> "Yu Gothic UI", 10]}, 
       VertexShapeFunction -> {"Circle"}, VertexStyle -> {
         Directive[
          EdgeForm[{
            RGBColor[
            0.4666666666666667, 0.4666666666666667, 0.4666666666666667]}], 
          GrayLevel[0.7]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {RGBColor[0, 0.5700000000000001, 0], Thickness[Large], 
         {Arrowheads[{{0.07, 0.8}}], 
          ArrowBox[{{0.5944058426424377, 0.5935195845129898}, {
           1.1546217121676712`, 1.1884119485117612`}}]}}, 
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
         {Arrowheads[{{0.07, 0.8}}], 
          ArrowBox[{{1.1546217121676712`, 1.1884119485117612`}, {
           1.1892614501630643`, 0.033807379957337735`}}]}}, 
        {RGBColor[0, 0.5700000000000001, 0], Thickness[Large], 
         {Arrowheads[{{0.07, 0.8}}], 
          ArrowBox[{{1.1546217121676712`, 1.1884119485117612`}, {0., 
           1.1537284547799675`}}]}}, 
        {RGBColor[0, 0.5700000000000001, 0], Thickness[Large], 
         {Arrowheads[{{0.07, 0.8}}], 
          ArrowBox[{{1.1892614501630643`, 0.033807379957337735`}, {
           0.5944058426424377, 0.5935195845129898}}]}}, 
        {RGBColor[0, 0.5700000000000001, 0], Thickness[Large], 
         {Arrowheads[{{0.07, 0.8}}], 
          ArrowBox[{{1.1892614501630643`, 0.033807379957337735`}, {
           0.03549615349335822, 0.}}]}}, 
        {RGBColor[0, 0.5700000000000001, 0], Thickness[Large], 
         {Arrowheads[{{0.07, 0.8}}], 
          ArrowBox[{{0., 1.1537284547799675`}, {0.5944058426424377, 
           0.5935195845129898}}]}}, 
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
         {Arrowheads[{{0.07, 0.8}}], 
          ArrowBox[{{0., 1.1537284547799675`}, {0.03549615349335822, 
           0.}}]}}, 
        {RGBColor[0, 0.5700000000000001, 0], Thickness[Large], 
         {Arrowheads[{{0.07, 0.8}}], 
          ArrowBox[{{0.03549615349335822, 0.}, {0.5944058426424377, 
           0.5935195845129898}}]}}}, 
       {GrayLevel[0.7], EdgeForm[{RGBColor[
        0.4666666666666667, 0.4666666666666667, 0.4666666666666667], Opacity[
        0.7]}], {
         DiskBox[{0.5944058426424377, 0.5935195845129898}, 
          0.015675002974838842], InsetBox[
          StyleBox["x1",
           StripOnInput->False,
           FontFamily->"Yu Gothic UI",
           FontSize->10], 
          Offset[{2, 2}, {0.6100808456172765, 0.6091945874878286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1546217121676712`, 1.1884119485117612`}, 
          0.015675002974838842], InsetBox[
          StyleBox["x2",
           StripOnInput->False,
           FontFamily->"Yu Gothic UI",
           FontSize->10], 
          Offset[{2, 2}, {1.17029671514251, 1.2040869514866002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1892614501630643`, 0.033807379957337735`}, 
          0.015675002974838842], InsetBox[
          StyleBox["x3",
           StripOnInput->False,
           FontFamily->"Yu Gothic UI",
           FontSize->10], 
          Offset[{2, 2}, {1.2049364531379032, 0.04948238293217658}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.1537284547799675`}, 0.015675002974838842], InsetBox[
          StyleBox["x4",
           StripOnInput->False,
           FontFamily->"Yu Gothic UI",
           FontSize->10], 
          Offset[{2, 2}, {0.015675002974838842, 1.1694034577548065}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.03549615349335822, 0.}, 0.015675002974838842], InsetBox[
          StyleBox["x5",
           StripOnInput->False,
           FontFamily->"Yu Gothic UI",
           FontSize->10], 
          Offset[{2, 2}, {0.05117115646819706, 0.015675002974838842}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageMargins->All,
  ImagePadding->25,
  ImageSize->Automatic]], "Output",
 CellChangeTimes->{
  3.92529466825348*^9, 3.925294737713304*^9, 3.925294900835968*^9, 
   3.925298189999466*^9, 3.925298223285838*^9, 3.925298371537773*^9, 
   3.9252985901647987`*^9, 3.925298647598913*^9, 3.92529876083714*^9, 
   3.925301384754218*^9, 3.925301414909855*^9, 3.925301578901169*^9, {
   3.925302911460143*^9, 3.925302962785458*^9}, 3.9253040589004602`*^9, 
   3.925359933571464*^9, {3.92536005679216*^9, 3.92536009893062*^9}, 
   3.925363438296694*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"4e447e9d-889b-45b6-800e-0139ce31804a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SIMULATION ", "Section",
 CellChangeTimes->{{3.8781998753416243`*^9, 
  3.8781998838045387`*^9}},ExpressionUUID->"f72b00f6-2370-432a-87b8-\
7fa64fac5873"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"name", "=", "\"\<Artifitial model\>\""}]], "Input",
 CellChangeTimes->{{3.878201027699355*^9, 3.878201030090268*^9}, {
  3.925293351311993*^9, 3.925293359645452*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"faeae79b-b8d8-4352-b6d0-f855f719e610"],

Cell[BoxData["\<\"Artifitial model\"\>"], "Output",
 CellChangeTimes->{
  3.925294668260437*^9, 3.925294737721139*^9, 3.9252949008441*^9, 
   3.925298190050723*^9, 3.925298223322523*^9, 3.925298371572146*^9, 
   3.925298590199369*^9, 3.9252986476373277`*^9, 3.925298760876354*^9, 
   3.925301384790617*^9, 3.925301414947067*^9, 3.925301578941309*^9, {
   3.925302911498727*^9, 3.925302962823681*^9}, 3.925304059021647*^9, 
   3.9253599335781803`*^9, {3.925360056799422*^9, 3.925360098936761*^9}, 
   3.925363438303474*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"92d5ea8b-03b3-447c-9d3a-570c2c451d30"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters ", "Subsection",
 CellChangeTimes->{{3.873373032863633*^9, 3.8733731149068823`*^9}, {
  3.87819922323665*^9, 3.8781992240425854`*^9}, {3.878202813770886*^9, 
  3.8782028145234113`*^9}},ExpressionUUID->"310bd0b6-466a-4451-bb4e-\
e4f0f9076cb4"],

Cell["Expression rate", "Text",
 CellChangeTimes->{{3.874049375153967*^9, 
  3.874049380478468*^9}},ExpressionUUID->"361ee149-ca0d-4ca5-b699-\
172a71bae7ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"\[Kappa]", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "4"}], ",", 
     RowBox[{"x2", "\[Rule]", "2"}], ",", 
     RowBox[{"x3", "\[Rule]", "3"}], ",", 
     RowBox[{"x4", "\[Rule]", "1"}], ",", 
     RowBox[{"x5", "\[Rule]", "4"}]}], "\[RightAssociation]"}]}]}]], "Input",
 CellChangeTimes->{{3.883823177530809*^9, 3.88382323429589*^9}, {
  3.884168883584141*^9, 3.884168915852433*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"cb8cb7fb-2d38-42d0-9e41-9e99ff301bd6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", "4"}], ",", 
   RowBox[{"x2", "\[Rule]", "2"}], ",", 
   RowBox[{"x3", "\[Rule]", "3"}], ",", 
   RowBox[{"x4", "\[Rule]", "1"}], ",", 
   RowBox[{"x5", "\[Rule]", "4"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.925294668303249*^9, 3.925294737749257*^9, 3.925294900876607*^9, 
   3.925298190057596*^9, 3.925298223328563*^9, 3.9252983715785847`*^9, 
   3.9252985902052517`*^9, 3.925298647643366*^9, 3.925298760882833*^9, 
   3.925301384796795*^9, 3.925301414954023*^9, 3.925301578948629*^9, {
   3.9253029115059643`*^9, 3.925302962830525*^9}, 3.9253040591243896`*^9, 
   3.9253599336073627`*^9, {3.92536005682531*^9, 3.925360098964306*^9}, 
   3.925363438336994*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"24eec657-3934-482f-9b0d-d69529e7b1b7"]
}, Open  ]],

Cell["Degradation rate", "Text",
 CellChangeTimes->{{3.8740493849031377`*^9, 
  3.874049389781644*^9}},ExpressionUUID->"ae013f5e-d984-42ee-a2d8-\
48f19eefea84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Gamma]", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"Keys", "[", "FB", "]"}], ",", "0.5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.876629778667239*^9, 3.876629786065074*^9}, {
  3.876630084913925*^9, 3.876630088593886*^9}, {3.876804308660385*^9, 
  3.876804326748213*^9}, {3.876804379866275*^9, 3.876804380376884*^9}, {
  3.87680461956773*^9, 3.876804620621854*^9}, {3.8768060374069233`*^9, 
  3.876806039772371*^9}, {3.876806079111388*^9, 3.876806080051244*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"f507d481-5b10-43b3-a499-113964d7ac57"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"x2", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"x3", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"x4", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"x5", "\[Rule]", "0.5`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.925294668309228*^9, 3.925294737755294*^9, 3.925294900886116*^9, 
   3.925298190078707*^9, 3.925298223358412*^9, 3.925298371606563*^9, 
   3.925298590234001*^9, 3.9252986476737957`*^9, 3.9252987608883457`*^9, 
   3.9253013848262033`*^9, 3.925301414960088*^9, 3.925301578969445*^9, {
   3.9253029115117083`*^9, 3.925302962860216*^9}, 3.925304059131818*^9, 
   3.925359933614328*^9, {3.925360056830486*^9, 3.92536009896959*^9}, 
   3.925363438342422*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"55d0c7d8-8c66-4b05-8fa6-8113ac2caf89"]
}, Open  ]],

Cell["Threshold for being activated or inhibited.  ", "Text",
 CellChangeTimes->{{3.8740494016241426`*^9, 
  3.874049428228771*^9}},ExpressionUUID->"afbd4ed5-dc1b-4fb4-af5c-\
53af0a6f1a6d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"\[Theta]", "=", 
   RowBox[{"Thresholding", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "FB", "]"}], ",", "0.5", ",", "0.20"}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{
  3.880177538872248*^9, {3.880177662593024*^9, 3.880177663890234*^9}, {
   3.8801777358292294`*^9, 3.880177751708494*^9}, {3.880177786815798*^9, 
   3.880177787425843*^9}, {3.880178167012353*^9, 3.880178168513274*^9}, {
   3.880440876906227*^9, 3.880440907270123*^9}, {3.880441258306089*^9, 
   3.880441285320883*^9}, {3.880441448585349*^9, 3.880441452208501*^9}, {
   3.88382346793817*^9, 3.883823469994742*^9}, {3.883823660168686*^9, 
   3.8838236636882677`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8d22ccf4-8d59-41fa-a8c7-7900cc26364c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]", "=", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"x1", "\[Rule]", "0.6"}], ",", 
    RowBox[{"x2", "\[Rule]", "0.7"}], ",", 
    RowBox[{"x3", "\[Rule]", "0.6"}], ",", 
    RowBox[{"x4", "\[Rule]", "0.6"}], ",", 
    RowBox[{"x5", "\[Rule]", "0.4"}]}], "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.883823680427274*^9, 3.883823731809638*^9}, {
  3.884168925385041*^9, 3.884168939638569*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"48d203fb-91e2-40bc-9986-ac547a29fc52"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", "0.6`"}], ",", 
   RowBox[{"x2", "\[Rule]", "0.7`"}], ",", 
   RowBox[{"x3", "\[Rule]", "0.6`"}], ",", 
   RowBox[{"x4", "\[Rule]", "0.6`"}], ",", 
   RowBox[{"x5", "\[Rule]", "0.4`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.925294668340883*^9, 3.925294737787767*^9, 3.925294900908475*^9, 
   3.925298190090115*^9, 3.9252982233923073`*^9, 3.92529837163978*^9, 
   3.925298590267805*^9, 3.925298647708801*^9, 3.925298760923507*^9, 
   3.925301384859114*^9, 3.925301414996525*^9, 3.925301578992268*^9, {
   3.925302911547068*^9, 3.925302962895348*^9}, 3.92530405916541*^9, 
   3.925359933648844*^9, {3.9253600568581657`*^9, 3.925360099000788*^9}, 
   3.925363438365437*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"3d1da541-6062-4dc4-ae7b-fc3de44ac3ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Highlighted", "[", 
  RowBox[{"TableForm", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Mean", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"StandardDeviation", "[", "\[Theta]", "]"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.875112379557344*^9, 3.875112381347424*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0cfd78bd-23c6-4140-9149-27b055c59ed0"],

Cell[BoxData[
 FrameBox[
  TagBox[
   TagBox[GridBox[{
      {"0.58`"},
      {"0.1095445115010332`"}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]],
  DefaultBaseStyle->"HighlightedInput",
  FrameStyle->None,
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.925294668358938*^9, 3.925294737817153*^9, 3.925294900927098*^9, 
   3.925298190108506*^9, 3.925298223398102*^9, 3.925298371646167*^9, 
   3.925298590274168*^9, 3.925298647715507*^9, 3.925298760956811*^9, 
   3.925301384865179*^9, 3.92530141502879*^9, 3.925301578998784*^9, {
   3.925302911578578*^9, 3.9253029629018106`*^9}, 3.925304059194869*^9, 
   3.925359933678755*^9, {3.925360056863778*^9, 3.925360099005703*^9}, 
   3.92536343838405*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"4b249c40-baa1-4ee3-a95e-9ea82be6d3a6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["For a stable state ", "Subsection",
 CellChangeTimes->{{3.878199103371267*^9, 3.8781991038840704`*^9}, {
  3.8781992940699244`*^9, 3.8781992959105086`*^9}, {3.87820017045313*^9, 
  3.878200178381318*^9}, {3.878202753244699*^9, 
  3.8782027609807987`*^9}},ExpressionUUID->"320d0900-0cc6-4823-911a-\
1a61e8254719"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stablestate", "=", 
  RowBox[{"StableFB", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8782000095370545`*^9, 3.8782000203425364`*^9}, 
   3.87820048369219*^9, {3.8782007203959064`*^9, 3.878200720873393*^9}, {
   3.878202867426736*^9, 3.878202873157181*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"129d26e8-e092-4e71-a71c-10ce2f9e0e08"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", "False"}], ",", 
   RowBox[{"x2", "\[Rule]", "False"}], ",", 
   RowBox[{"x3", "\[Rule]", "True"}], ",", 
   RowBox[{"x4", "\[Rule]", "False"}], ",", 
   RowBox[{"x5", "\[Rule]", "True"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.925294668364456*^9, 3.92529473782564*^9, 3.925294900934085*^9, 
   3.925298190115237*^9, 3.925298223403656*^9, 3.9252983716748238`*^9, 
   3.925298590305705*^9, 3.925298647746611*^9, 3.9252987609632273`*^9, 
   3.925301384896096*^9, 3.925301415036193*^9, 3.925301579017918*^9, {
   3.9253029115855618`*^9, 3.925302962931185*^9}, 3.92530405920164*^9, 
   3.925359933683775*^9, {3.925360056869116*^9, 3.9253600990317097`*^9}, 
   3.925363438389401*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"af3ffce7-0776-4f0a-b5d3-2bde6482d5ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initialcondition", "=", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"x1", "\[Rule]", "4"}], ",", 
    RowBox[{"x2", "\[Rule]", "5"}], ",", 
    RowBox[{"x3", "\[Rule]", "8"}], ",", 
    RowBox[{"x4", "\[Rule]", "0.5"}], ",", 
    RowBox[{"x5", "\[Rule]", "7"}]}], "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.884323189186315*^9, 3.88432322343289*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"fc252bdc-578c-4418-923a-61e40a90b0c0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", "4"}], ",", 
   RowBox[{"x2", "\[Rule]", "5"}], ",", 
   RowBox[{"x3", "\[Rule]", "8"}], ",", 
   RowBox[{"x4", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"x5", "\[Rule]", "7"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.925294668374069*^9, 3.925294737858395*^9, 3.925294900958349*^9, 
   3.925298190138444*^9, 3.925298223436757*^9, 3.92529837168084*^9, 
   3.925298590312008*^9, 3.925298647752755*^9, 3.925298760993794*^9, 
   3.925301384902258*^9, 3.9253014150421658`*^9, 3.92530157902438*^9, {
   3.925302911615822*^9, 3.925302962938101*^9}, 3.925304059229879*^9, 
   3.925359933713307*^9, {3.925360056874626*^9, 3.925360099036778*^9}, 
   3.925363438394602*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"841e7e3d-9173-47ca-8ba4-7b31a806c7a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquilibria", "@", 
  RowBox[{"ModelOf", "[", "FB", "]"}]}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"f7888084-abc2-4a00-a0a5-dcf5a3734ce8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "False"}], ",", 
     RowBox[{"x2", "\[Rule]", "False"}], ",", 
     RowBox[{"x3", "\[Rule]", "True"}], ",", 
     RowBox[{"x4", "\[Rule]", "False"}], ",", 
     RowBox[{"x5", "\[Rule]", "True"}]}], "}"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.925294668399793*^9, 3.9252947379163656`*^9, 3.925294900987595*^9, 
   3.9252981901767187`*^9, 3.925298223498252*^9, 3.9252983717099037`*^9, 
   3.925298590341337*^9, 3.9252986477849283`*^9, 3.9252987610040407`*^9, 
   3.925301384921091*^9, 3.925301415074337*^9, 3.92530157904438*^9, {
   3.925302911626584*^9, 3.9253029629708443`*^9}, 3.925304059260699*^9, 
   3.925359933742868*^9, {3.925360056899578*^9, 3.925360099062829*^9}, 
   3.925363438412753*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"4e55288e-4d9c-43bf-b5e0-84b42b415c99"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ODE", "Subsubsection",
 CellChangeTimes->{{3.8781993085060453`*^9, 3.87819931245477*^9}, {
  3.878200166661998*^9, 
  3.878200167269703*^9}},ExpressionUUID->"871cb780-1366-4847-b531-\
0f3c2fdb778d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"system", "=", GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["x1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"hillp", "[", 
          RowBox[{
           RowBox[{"x3", "[", "t", "]"}], ",", "0.6`"}], "]"}], " ", 
         RowBox[{"hillp", "[", 
          RowBox[{
           RowBox[{"x4", "[", "t", "]"}], ",", "0.6`"}], "]"}], " ", 
         RowBox[{"hillp", "[", 
          RowBox[{
           RowBox[{"x5", "[", "t", "]"}], ",", "0.4`"}], "]"}]}], "-", 
        RowBox[{"0.5`", " ", 
         RowBox[{"x1", "[", "t", "]"}]}]}]}]},
     {
      RowBox[{
       RowBox[{"x1", "[", "0", "]"}], "\[Equal]", "4"}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["x2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"hillp", "[", 
          RowBox[{
           RowBox[{"x1", "[", "t", "]"}], ",", "0.6`"}], "]"}]}], "-", 
        RowBox[{"0.5`", " ", 
         RowBox[{"x2", "[", "t", "]"}]}]}]}]},
     {
      RowBox[{
       RowBox[{"x2", "[", "0", "]"}], "\[Equal]", "5"}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["x3", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"hillm", "[", 
          RowBox[{
           RowBox[{"x2", "[", "t", "]"}], ",", "0.7`"}], "]"}]}], "-", 
        RowBox[{"0.5`", " ", 
         RowBox[{"x3", "[", "t", "]"}]}]}]}]},
     {
      RowBox[{
       RowBox[{"x3", "[", "0", "]"}], "\[Equal]", "8"}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["x4", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"hillp", "[", 
         RowBox[{
          RowBox[{"x2", "[", "t", "]"}], ",", "0.7`"}], "]"}], "-", 
        RowBox[{"0.5`", " ", 
         RowBox[{"x4", "[", "t", "]"}]}]}]}]},
     {
      RowBox[{
       RowBox[{"x4", "[", "0", "]"}], "\[Equal]", "0.5`"}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["x5", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"hillm", "[", 
          RowBox[{
           RowBox[{"x4", "[", "t", "]"}], ",", "0.6`"}], "]"}], " ", 
         RowBox[{"hillp", "[", 
          RowBox[{
           RowBox[{"x3", "[", "t", "]"}], ",", "0.6`"}], "]"}]}], "-", 
        RowBox[{"0.5`", " ", 
         RowBox[{"x5", "[", "t", "]"}]}]}]}]},
     {
      RowBox[{
       RowBox[{"x5", "[", "0", "]"}], "\[Equal]", "7"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}]}]}]], "Input",
 CellChangeTimes->{{3.87405713480534*^9, 3.874057164042363*^9}, {
   3.874057194207895*^9, 3.874057200963294*^9}, {3.87412605749236*^9, 
   3.8741260595998487`*^9}, {3.874126097272878*^9, 3.874126372884187*^9}, {
   3.874126503245182*^9, 3.874126503776569*^9}, 3.8741266108667088`*^9, 
   3.874126642035737*^9, 3.874127094093884*^9, 3.874127774376068*^9, {
   3.874127819981303*^9, 3.874127859531064*^9}, {3.874128841631455*^9, 
   3.874128880531884*^9}, {3.874128925047748*^9, 3.874128928164889*^9}, {
   3.874129003492651*^9, 3.87412901977706*^9}, {3.874129057575714*^9, 
   3.87412908938052*^9}, {3.874129192343237*^9, 3.874129195302107*^9}, {
   3.874129265646992*^9, 3.874129273840888*^9}, {3.874155013599725*^9, 
   3.874155030578845*^9}, {3.874156477727892*^9, 3.874156492096912*^9}, {
   3.874408168582242*^9, 3.874408215787552*^9}, 3.874409150801753*^9, {
   3.874652730473151*^9, 3.8746527305526133`*^9}, {3.874652922934483*^9, 
   3.874653056544876*^9}, 3.874653199600054*^9, {3.875112148794076*^9, 
   3.875112164422886*^9}, {3.875170765522683*^9, 3.875170777244031*^9}, {
   3.875170925871227*^9, 3.875170926411797*^9}, 3.878199508630127*^9, {
   3.878199661321131*^9, 3.8781997119280443`*^9}, 3.878199937078641*^9, 
   3.878200454920017*^9, {3.878290007239253*^9, 3.878290027612454*^9}, {
   3.878290216671824*^9, 3.87829021956534*^9}, {3.925360040736672*^9, 
   3.92536004983234*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"ade15350-8452-4de3-b73d-e17160941588"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"hillp", "[", 
        RowBox[{
         RowBox[{"x3", "[", "t", "]"}], ",", "0.6`"}], "]"}], " ", 
       RowBox[{"hillp", "[", 
        RowBox[{
         RowBox[{"x4", "[", "t", "]"}], ",", "0.6`"}], "]"}], " ", 
       RowBox[{"hillp", "[", 
        RowBox[{
         RowBox[{"x5", "[", "t", "]"}], ",", "0.4`"}], "]"}]}], "-", 
      RowBox[{"0.5`", " ", 
       RowBox[{"x1", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "[", "0", "]"}], "\[Equal]", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"hillp", "[", 
        RowBox[{
         RowBox[{"x1", "[", "t", "]"}], ",", "0.6`"}], "]"}]}], "-", 
      RowBox[{"0.5`", " ", 
       RowBox[{"x2", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "[", "0", "]"}], "\[Equal]", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x3", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"3", " ", 
       RowBox[{"hillm", "[", 
        RowBox[{
         RowBox[{"x2", "[", "t", "]"}], ",", "0.7`"}], "]"}]}], "-", 
      RowBox[{"0.5`", " ", 
       RowBox[{"x3", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x3", "[", "0", "]"}], "\[Equal]", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x4", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"hillp", "[", 
       RowBox[{
        RowBox[{"x2", "[", "t", "]"}], ",", "0.7`"}], "]"}], "-", 
      RowBox[{"0.5`", " ", 
       RowBox[{"x4", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x4", "[", "0", "]"}], "\[Equal]", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x5", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"hillm", "[", 
        RowBox[{
         RowBox[{"x4", "[", "t", "]"}], ",", "0.6`"}], "]"}], " ", 
       RowBox[{"hillp", "[", 
        RowBox[{
         RowBox[{"x3", "[", "t", "]"}], ",", "0.6`"}], "]"}]}], "-", 
      RowBox[{"0.5`", " ", 
       RowBox[{"x5", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x5", "[", "0", "]"}], "\[Equal]", "7"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.925360076920922*^9, 3.92536009906871*^9}, 
   3.925363438433446*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"b831e081-1b3c-4aba-8704-40e7a22bc99d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiments", "Subsubsection",
 CellChangeTimes->{{3.878199121245391*^9, 
  3.878199127645845*^9}},ExpressionUUID->"9559b6f1-b753-4bcd-9d85-\
17e588e8c608"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EXP", "=", 
  RowBox[{"ThreeExperienceFromODE", "[", 
   RowBox[{
   "FB", ",", "system", ",", "40", ",", "stablestate", ",", "\[Theta]"}], 
   "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "voir", " ", "la", " ", "fonction", " ", "dans", " ", "le", " ", "package",
     " ", "functionsneeded"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.875174612461335*^9, 3.87517465217169*^9}, {
   3.8751749032069626`*^9, 3.875174909241327*^9}, {3.875174958210922*^9, 
   3.875174958605521*^9}, {3.87533226447083*^9, 3.8753322687115*^9}, {
   3.876803484299027*^9, 3.876803484711145*^9}, {3.876804473071639*^9, 
   3.876804473553537*^9}, {3.876804518213018*^9, 3.876804518595807*^9}, {
   3.8768045487589417`*^9, 3.876804561428529*^9}, {3.876804641267056*^9, 
   3.876804641700132*^9}, {3.87680539647363*^9, 3.876805428192663*^9}, 
   3.876809951066358*^9, 3.877088550981638*^9, {3.878199596886769*^9, 
   3.878199601014098*^9}, 3.878199642478593*^9, 3.878199950984833*^9, 
   3.878200104281387*^9, 3.878200455063961*^9, {3.878621863845665*^9, 
   3.878621865969256*^9}, {3.880433803932938*^9, 3.880433824873317*^9}, {
   3.880434723646684*^9, 3.880434727912323*^9}, {3.880437094762022*^9, 
   3.880437096839781*^9}, {3.88044041840606*^9, 3.880440422295886*^9}, {
   3.9252941494048357`*^9, 3.925294150442305*^9}, 3.925294562522538*^9, {
   3.925360631278047*^9, 3.925360640114558*^9}, {3.9253606960564*^9, 
   3.925360706417767*^9}, 3.9253611029822907`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"f222cec5-17e1-407a-9dbf-b3e818a2da25"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"16.3`", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"x1", "\[Rule]", "0.0329409324144633656`3."}], ",", 
      RowBox[{"x2", "\[Rule]", "0.1969897018081324391`3."}], ",", 
      RowBox[{"x3", "\[Rule]", "4.3130550780115592957`3."}], ",", 
      RowBox[{"x4", "\[Rule]", "0.5626518319231604837`3."}], ",", 
      RowBox[{"x5", "\[Rule]", "0.4995723018971113261`3."}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"28.13`", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"x1", "\[Rule]", "0"}], ",", 
      RowBox[{"x2", "\[Rule]", "0.0005316074162051916`3."}], ",", 
      RowBox[{"x3", "\[Rule]", "5.9954475161745639511`3."}], ",", 
      RowBox[{"x4", "\[Rule]", "0.0015184036721022187`3."}], ",", 
      RowBox[{"x5", "\[Rule]", "7.9797512675035981999`3."}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"40.`", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"x1", "\[Rule]", "0"}], ",", 
      RowBox[{"x2", "\[Rule]", "0"}], ",", 
      RowBox[{"x3", "\[Rule]", "5.999987957616469636`3."}], ",", 
      RowBox[{"x4", "\[Rule]", "0"}], ",", 
      RowBox[{"x5", "\[Rule]", "7.9999464373708786269`3."}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.925294668590713*^9, 3.925294738106135*^9, 3.925294901195771*^9, 
   3.925298190370784*^9, 3.925298223685473*^9, 3.9252983718981133`*^9, 
   3.925298590531589*^9, 3.925298647981783*^9, 3.92529876121875*^9, 
   3.925301384948493*^9, 3.9253014151143217`*^9, 3.925301579059174*^9, {
   3.925302911839336*^9, 3.925302963160156*^9}, 3.92530405945973*^9, 
   3.92535993397543*^9, {3.925360057135779*^9, 3.9253600992768593`*^9}, 
   3.92536343864179*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"af65ebe4-4f0a-4b29-b126-56f7854f09fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Epil", "=", 
  RowBox[{"Keys", "[", "EXP", "]"}]}]], "Input",
 CellChangeTimes->{{3.878624448856841*^9, 3.878624500508399*^9}, {
   3.878624597215663*^9, 3.87862460247232*^9}, 3.878625103730691*^9, {
   3.880435781160456*^9, 3.880435782472986*^9}, 3.880435824378843*^9, {
   3.880435875611809*^9, 3.880435876343872*^9}, {3.880440712361779*^9, 
   3.880440713332724*^9}, {3.925298750140519*^9, 3.925298754882475*^9}, {
   3.925299002104446*^9, 3.92529900247989*^9}, {3.9253029328153*^9, 
   3.925302933812273*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9876b802-d28d-4bde-bd92-b4fe91115f6b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"16.3`", ",", "28.13`", ",", "40.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.925294668615546*^9, 3.925294738139004*^9, 3.925294901219589*^9, 
   3.925298190394217*^9, 3.925298223691224*^9, 3.9252983719040213`*^9, 
   3.9252985905375233`*^9, 3.9252986480342903`*^9, 3.9252987612248497`*^9, 
   3.925299005212568*^9, 3.925301384964582*^9, 3.925301415128972*^9, 
   3.925301579087139*^9, {3.925302911848207*^9, 3.9253029631663313`*^9}, 
   3.9253040594658546`*^9, 3.9253599339811*^9, {3.925360057140747*^9, 
   3.92536009928236*^9}, 3.9253634386468554`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"6e16c29d-54a6-461b-aa86-d81f9d0760fc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fun", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "t", "]"}], "&"}], "/@", 
    RowBox[{"Keys", "[", "FB", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.878199940408027*^9, 3.878200455081608*^9, 
  3.878625106701571*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"01f5534d-d548-4329-a2d0-f011ae2bbf0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fig1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"fun", "/.", 
      RowBox[{"NDSolve", "[", 
       RowBox[{"system", ",", 
        RowBox[{"Keys", "[", "FB", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "40"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "40"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
    RowBox[{"PlotStyle", "->", "Thick"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"Keys", "[", "FB", "]"}], ",", "Right"}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "->", "\"\<Franklin Gothic\>\""}], ",", "11"}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "3"}]}], ",", " ", 
    RowBox[{"PlotLabel", "->", " ", "\"\<\>\""}], ",", " ", 
    RowBox[{"ImageSize", "->", "Large"}], ",", 
    RowBox[{"Epilog", "->", " ", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "DotDashed", ",", " ", "Red", ",", " ", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Epil", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Epil", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "10"}], "}"}]}], "}"}], 
        "]"}], " ", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Epil", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Epil", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "10"}], "}"}]}], "}"}], 
        "]"}], ",", " ", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Epil", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Epil", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "10"}], "}"}]}], "}"}], 
        "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878624401075828*^9, 3.8786244364619217`*^9}, {
  3.878624627174478*^9, 3.878624670949032*^9}, {3.878624707925895*^9, 
  3.878624762246393*^9}, {3.880437089402284*^9, 3.880437103569278*^9}, {
  3.884169055703274*^9, 3.884169058895458*^9}, {3.884169497965553*^9, 
  3.884169538272297*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"39a3c9ce-ca13-4862-ae52-65b4885644a7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            LineBox[CompressedData["
1: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
Dg6IIMWPnXyV/h77H4A8f5k=
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            LineBox[CompressedData["
1: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
SvL/aRvrQw==
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            LineBox[CompressedData["
1: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
0sh2tIlK+CL4OHfPSDuIvpx6ZPJMCdMdYXEmpx0Cnldu/MhRQpUfN4z01duB
kOhc91+1EpobqzPqnfgOJQ9qbAWXlHAuLaL7gnsrZJs2coWsKqEOtxFw6LZC
MmN7+78NJTTw9toW3dUK/tEDhmU0ynjapXbv4ectYJa0Tqlkysiga/ygpq0Z
/mQpksNklLF30XLgnUET7K17mrJyQRlNVO5ajTh9A+qHaadsLymjYKlhaDN+
g0XTV2y1V5TxsTJtI5n9G/S0vA+JdaV4289Fr6oe0n+2u8rdUcaPBWHR+3jq
QXuMHu2TlLGsNtY9p+8rOOz0HGxpUUZUXrubHFEDBwS+dW18V8aqOodplms1
0KLJ1yr5g/L816695WY1oO5c+ymgTxlHn9BM5DLWAF0H+xP1CWVMkPT7NBr5
BTJevLN+Tq2CwxPbe+8/rYYRndWGa6oqGDHhsXCxtxKSrM2qkzVUMHO/y+P3
nyvBzPXFxzptFbQdfRWgmlEJxS+Ns4WIKvjXYJAtz60SgnY/vv/DXAX5y1uH
Q3dXgmiXFupdVkG/Gv2Rx/crwP66TwljsgrS+p/WdUorA3Xl3yVSz1RwQ6yB
KsS7DPbM4zvDFyp4ti3VYtS8DN640733z1RB19qb7ZfXSmHTLebDYpEKarFW
0N+yLIUE16yy/kYV7Eokp3mzfYRvzh1VeVsqlPV2fPZE5Tt4Kqte/Y1KFZP+
BrbRP3sHbtNJ1WO0qrh5Rtt39tY74HC2/SK4RxUNI3/9Z6f6DuycJmviOVQR
mQ+aN+aWUPYncp2vgirWGdUfsUsvBoXLMi1mF1RxUPRlyu3SIvjtKOCaf1EV
Y0+mli8mF0G4Mxvz3iuqOG6bsZDmUwST7htHW11U0WI1zOCFXhGk+Tb+OOqr
irxzgTF0NYXAGev063iiKm7/5RHR7X0D5PLc6fPNqviCy3xF0aoACj6nRFS1
qeJrLVsPUaECsKmOkxfuVEW2gz+qr/2XDx/rfNyGe1UxM1SkmPwwH260H1q8
NKGKj0Vtd7PW5sH4+N+Nq7RqOP5OLeSWaS60ssoyeGqpYSdbzcWsyGwgXLs2
+URXDX+L3TnOeiUbCuoK6qpBDf35VlY+ErMh0lcpiNlQDdWFR79/WsoCszH1
rdxjaqhDzE+MOJ8FDR+JM3+c1LCvnYFnAzOh9vyJjiPP1fD158mDSdLpoFqW
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
u43wPx1djDA=
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            LineBox[CompressedData["
1:eJwV13c8Vl8YAHA7s6xsXnuP197O433TQISMSrIpDUIJlRDZIyGFMsqIzF9I
ssrKTLJS9kjZm/yuf9738/3ce885zznPPfc8AvY3TJ3ISEhIIrCfg//Ue/ZU
8o75Onl4B24SEh5o/MpvaMkfhqxiLlQRqHhg/3NNED//U7TzKb/al54HUmuj
cJT8uejMMIzUc/CA9IJj9L7LW1T699ZAIx8P/Dic9m/3ewkyElH+HSfMA8Kv
aFS2d8qRev6C67QED1zV9r62gatEcW8P/xWV5YHS3l9Zq8RqVMRoMb0uxwPb
bobDSy4fUa60eeeANA+8IB0O29CrQ0XXHPaCBHjgWHucyPr3enTZ3Jf6Jx0P
zCSfqFu93Ijkk02Mtua5IdJxz3pl5xMa+6mhvdzEDXh86eZSVBOyoyt9lZ/O
DV93XBMWcS3ogUD29B9vbrjVxIdfKG5FVF7cuZkG3MD1uLftD/ELCj521FhL
gBvsJYH8t0sn4uz+ltf0hQt83tBVLn/vQY77KmwxolxwaGhM7A9uAGleyzm8
M8kB/bUfvOdnBlDVzr0iko8ckPcqueF38SDS25m2ICZzgNFNo0tzxGFkcNJR
6Z4BByTSVCVOu/xER07IT30sYwfm581kS9/HUP3qaqJgPBu8bE33+I2bRU9e
5ljtebPCanK55M/IWfTP33RGz4wVjru0jfdszSJ2kwDbFjwrzJNvmFd9nUO7
LYq37s+zgJq2kUZY6Dwy1YrzTHVmga63u2RiCwvIVh7fY+jEDPdbpfXlL62g
YLMTfFthjJBT/E40/8kKUjR5ojp7jRF6kgnkIl9WkEbm4hS1KSMIu1hVc6iv
IlyCe/s3LkZoJQ+WJWFZQ9nXaGI1Lh4BNu0h5s7P6+jqwHy7zgcGKHwbNnRV
dhv5sSStd1bTwhzzXKS+3TaS6lC19YinBbFb+jriCdto/eqTSXNXWnihRfdy
fGsbxTZH5k2x0kJ8S6Tz+U876D+W+L/cHjRwazxm6YT1HhrsF5vxU6aGdLq2
ICY9Eih3NFq/9JsSdLT9rANsSEDBsnsns5kShq9LKS/cJoGpgKOkuFeUwNET
MfUljwQUf3tVV9hRQlyy4alHjKSgzMX2w2OIAoJEOg7vD5FCbj/TdnE/Obig
7qfzN8nBgHJuR3GTFEgy1quGIsjB92f4wslhUkim4BluzSIHUd4yrbBaUmhu
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
duD/Ac4reAk=
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
Dg6IIMWPnXyV/h77H4A8f5k=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
SvL/aRvrQw==
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
0sh2tIlK+CL4OHfPSDuIvpx6ZPJMCdMdYXEmpx0Cnldu/MhRQpUfN4z01duB
kOhc91+1EpobqzPqnfgOJQ9qbAWXlHAuLaL7gnsrZJs2coWsKqEOtxFw6LZC
MmN7+78NJTTw9toW3dUK/tEDhmU0ynjapXbv4ectYJa0Tqlkysiga/ygpq0Z
/mQpksNklLF30XLgnUET7K17mrJyQRlNVO5ajTh9A+qHaadsLymjYKlhaDN+
g0XTV2y1V5TxsTJtI5n9G/S0vA+JdaV4289Fr6oe0n+2u8rdUcaPBWHR+3jq
QXuMHu2TlLGsNtY9p+8rOOz0HGxpUUZUXrubHFEDBwS+dW18V8aqOodplms1
0KLJ1yr5g/L816695WY1oO5c+ymgTxlHn9BM5DLWAF0H+xP1CWVMkPT7NBr5
BTJevLN+Tq2CwxPbe+8/rYYRndWGa6oqGDHhsXCxtxKSrM2qkzVUMHO/y+P3
nyvBzPXFxzptFbQdfRWgmlEJxS+Ns4WIKvjXYJAtz60SgnY/vv/DXAX5y1uH
Q3dXgmiXFupdVkG/Gv2Rx/crwP66TwljsgrS+p/WdUorA3Xl3yVSz1RwQ6yB
KsS7DPbM4zvDFyp4ti3VYtS8DN640733z1RB19qb7ZfXSmHTLebDYpEKarFW
0N+yLIUE16yy/kYV7Eokp3mzfYRvzh1VeVsqlPV2fPZE5Tt4Kqte/Y1KFZP+
BrbRP3sHbtNJ1WO0qrh5Rtt39tY74HC2/SK4RxUNI3/9Z6f6DuycJmviOVQR
mQ+aN+aWUPYncp2vgirWGdUfsUsvBoXLMi1mF1RxUPRlyu3SIvjtKOCaf1EV
Y0+mli8mF0G4Mxvz3iuqOG6bsZDmUwST7htHW11U0WI1zOCFXhGk+Tb+OOqr
irxzgTF0NYXAGev063iiKm7/5RHR7X0D5PLc6fPNqviCy3xF0aoACj6nRFS1
qeJrLVsPUaECsKmOkxfuVEW2gz+qr/2XDx/rfNyGe1UxM1SkmPwwH260H1q8
NKGKj0Vtd7PW5sH4+N+Nq7RqOP5OLeSWaS60ssoyeGqpYSdbzcWsyGwgXLs2
+URXDX+L3TnOeiUbCuoK6qpBDf35VlY+ErMh0lcpiNlQDdWFR79/WsoCszH1
rdxjaqhDzE+MOJ8FDR+JM3+c1LCvnYFnAzOh9vyJjiPP1fD158mDSdLpoFqW
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
u43wPx1djDA=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1:eJwV13c8Vl8YAHA7s6xsXnuP197O433TQISMSrIpDUIJlRDZIyGFMsqIzF9I
ssrKTLJS9kjZm/yuf9738/3ce885zznPPfc8AvY3TJ3ISEhIIrCfg//Ue/ZU
8o75Onl4B24SEh5o/MpvaMkfhqxiLlQRqHhg/3NNED//U7TzKb/al54HUmuj
cJT8uejMMIzUc/CA9IJj9L7LW1T699ZAIx8P/Dic9m/3ewkyElH+HSfMA8Kv
aFS2d8qRev6C67QED1zV9r62gatEcW8P/xWV5YHS3l9Zq8RqVMRoMb0uxwPb
bobDSy4fUa60eeeANA+8IB0O29CrQ0XXHPaCBHjgWHucyPr3enTZ3Jf6Jx0P
zCSfqFu93Ijkk02Mtua5IdJxz3pl5xMa+6mhvdzEDXh86eZSVBOyoyt9lZ/O
DV93XBMWcS3ogUD29B9vbrjVxIdfKG5FVF7cuZkG3MD1uLftD/ELCj521FhL
gBvsJYH8t0sn4uz+ltf0hQt83tBVLn/vQY77KmwxolxwaGhM7A9uAGleyzm8
M8kB/bUfvOdnBlDVzr0iko8ckPcqueF38SDS25m2ICZzgNFNo0tzxGFkcNJR
6Z4BByTSVCVOu/xER07IT30sYwfm581kS9/HUP3qaqJgPBu8bE33+I2bRU9e
5ljtebPCanK55M/IWfTP33RGz4wVjru0jfdszSJ2kwDbFjwrzJNvmFd9nUO7
LYq37s+zgJq2kUZY6Dwy1YrzTHVmga63u2RiCwvIVh7fY+jEDPdbpfXlL62g
YLMTfFthjJBT/E40/8kKUjR5ojp7jRF6kgnkIl9WkEbm4hS1KSMIu1hVc6iv
IlyCe/s3LkZoJQ+WJWFZQ9nXaGI1Lh4BNu0h5s7P6+jqwHy7zgcGKHwbNnRV
dhv5sSStd1bTwhzzXKS+3TaS6lC19YinBbFb+jriCdto/eqTSXNXWnihRfdy
fGsbxTZH5k2x0kJ8S6Tz+U876D+W+L/cHjRwazxm6YT1HhrsF5vxU6aGdLq2
ICY9Eih3NFq/9JsSdLT9rANsSEDBsnsns5kShq9LKS/cJoGpgKOkuFeUwNET
MfUljwQUf3tVV9hRQlyy4alHjKSgzMX2w2OIAoJEOg7vD5FCbj/TdnE/Obig
7qfzN8nBgHJuR3GTFEgy1quGIsjB92f4wslhUkim4BluzSIHUd4yrbBaUmhu
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
duD/Ac4reAk=
                "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {576, 192}, "Axes" -> {False, False}, 
             "LabelStyle" -> Directive[FontFamily -> "Franklin Gothic", 11], 
             "AspectRatio" -> Rational[1, 3], "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2], 
                Thickness[Large]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {576, 192}, "Axes" -> {False, False}, "LabelStyle" -> 
            Directive[FontFamily -> "Franklin Gothic", 11], "AspectRatio" -> 
            Rational[1, 3], "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[2], 
               Thickness[Large]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>]], Selectable -> False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
Dg6IIMWPnXyV/h77H4A8f5k=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2], 
            Thickness[Large]], 
           Line[CompressedData["
1:eJwV13c8lV8YAHArsrJde69ce+/zuDcNSUUKSWWPEkqEhpUtJISskAgRhWRF
9lbZIlkpZGT98nvvP/d+vp97znnOc87zvuceYZsbJvYUZGRk3tgH6fvZPRtq
RbtCvYCgCbH9fUFoGhAyuiAUjuTcGatmuwRh/1NtkJDQU3Tx5q9ivjRBeFYf
LXhA6CXibvPZ8dAUhGu6Xtf/Clah+3U2zeXeAjCw65SwItiGToTJhShT8APN
6LTkL8Fh5M6lpPPvJA8M1X/wWpofRr9UIh0GRHigIC/548/SEZQyd5xyYZsb
jD2NLy8Sx9CawBjZYD43JNJWJ845TqIUxlrpdFpuYE1rpVj9Oo16rlELFX/B
QVZ7hsdPwQUksvpeUimNA9aTK6QnoxaQfN750FBvDjjq2PG9f3sBG/+eAK8p
ByxR/jWrHlhEmhkxx3fpOEBD11grPHQJ3Zl6KJtwlx16S/YoJJeX0Qh3QWbP
dTa43y5jqHh5Dd1t9tJo82aB/NJ3EoVP1pDQaGuvuCUL9CcTKMU719D8NYfC
ch0WEHM0r+HSXEf/UfmOOlKwQDtlsBwZ2wYap6PV4Y1lBk7dUdaeT5uImuPX
qXEnJiguCR+9JreDvl4IVzbQZYBF1sUow6s7KGkm0SaEmQEkbxvqSSXsIJpd
U0+GGXrI1KHP+r69g6JDF4J+RdJDfFuUg2XzLtLyGM1YnqCD298frR6z+g/d
wuXqPomjhQz6jiAWAzL4xjWXHy1BA3q6flYPrMmAboFFd4KcBsbc8KrL3mTw
jq1/zmmcGrj6I2c7C8igS29cEP+EGuKSjU6EMZMD8uu6a0FDDUHi3Yf2R8lh
kSbiEMsmFTiivqdLnpSQq73KmbhDAWTZm9WjkZQwNXUvlXucApKp+Mbacyjh
08DcfHsdBbS2OQi8/EIJN8NdP1SEUIDUub1sey0qSNdb/JHDRgHzTpKvJsgP
QIjROUKxOjm4xN+t7Y2lhuibB1/q6u4jio3sybqX1EAxmjZXzrCPUi60kpU0
UsMQ5csE77F/qJ2PjRi9Tg0yu5nm4/7/EP5FfssJcxrYJBRe5m/4Dy29H+ht
FDwI7NG2zxku7CG3H4e/lxfTwk81DccPFdvom/XwwYY2WmDrGitzjdhGpkNh
cl0ztJBdWEVme3kbaXTM3fnBQwe1ScMN0nTbiLI0l5kzlA6Ygidfs9huoWR/
YT3vy/RwWEfl0KDwX9TAxv1Uk5kR1swP97P3riOV6NZaAzwj7C2uxlIWraM8
ap+Zs0cZgVEyw0w2Yh1FbX+Rd/HHvH7MW8FgHZ2fTPiUMs8IAvIs3Ysf1tBi
AfP6bv0hSHhy6+J41R9EJxwsOanBDGdjWJdVh1dQq06c/D0DZjgyuqP8tnYF
PTRPV+c3YQaNcHupKzkriCK28thFV2aYS6hkVnBfQTv/lhy/PmOGhDjxgEra
FfRzzCy/B6vbtVqj7y5hv1FnsuTh+k4W8DM3mvIp+IkiylUULw+zQDIu3mTj
3k90vFdf898PFvh55o32W9OfqInG6oTOPgtImrj2Uf5bRDW3Y50rFVkhwW0u
utFsERWd2375OpEVTjPU2XmyLKAY5g7prCtssGxXvz32dhZVqfNXGLuxgVtn
qbpU7Cyasb6B9vzY4CB5jEuF8yzSLmI7dyGJDZRvqvx+zD+L5k9Y3WXsZgP2
rv4zZmE/EDHoV88dbXZoe3SBOtJ5Bm1tMHmZcHLAs9Yzi38uTCNRfpv9fVEO
mKIeH3ytMY2Mj5SHFylywFDyMcoc7mmUG2+efvAUB5jpERukxqaQiXxWS20Q
B3Anqe1k2U6hIiclHvwqB5hQfWCm8f+GbEbP1VF2ckJ+m8W3osxxRJc6dd1j
mBMYkr6q890YR2WWbnyTs5wQq/zv7rjuOKIcCb1TTY6DEbZDr86PjaGcoWpl
D3Uc9Kbwp7Lzj6HZz0L5E9k4oGAXpDYsGkEuvUuxVXe4YOyfQ4nwgSHEGnsH
SYZygZaKXNvq2FdUfZr6d0ICF0Sv2wodqPiK6HsET7qXcIHwi7jmNfuv6FWX
yQHJH1zwoU313Uz7F/S7vfJOwhlumP3XXfk28zPyaA62uSHJA+8PUFIZ3hlA
AjNHqTeVeeAXYV1xxnIAdVDQFvgDDzDVpbYX6QwgcYheDbfgAd/o61zdZANo
uPrJg5xIHriqKeShHdmP9F/npQ8v8wD/n8M3I/P7EEtq6wixkhf0jpOzCFH2
otqqiHvtTbxw+UA6PXGwB7kOGYmc7eMFD4Z7a4+ze1AzR5+z9SIvrLcldfBD
D7oTO7zlw8cHFubHZprudaOpkEXO4gd8YMNT+XmXtguVujOYcp3gh/wohrHN
c+2oM4XtTtF5fvDOoxl0lGpHs008GQQ7fpg/c1JWbK8N8XAf/nntPj/8C81c
889pQ8ENBkENFfzQNqN9IWurFZ1nvf/GRUQAONoElYyKW9DOm1W2D7sCcEz3
iOzGyWbEPrGlaUIrCO2icZY/JZuR3EGyK3OcgiC4neglQNWMbK0OvWJREgRc
W8CY5ocm1EmFP+LgJAi5bj+7tZSaULqZ3S2mz4JA7eB5llnyI8ryc11UuCAE
VDW8QW6aDUihnnYr9JIQrF/0kVYXaED1VPkHJm2FwPdp1pA0ZQP6Fj0jFO0u
BCnHTirHd9UjgcxLFxbChUBlPuGYhV09Smk63ZRVIwSNu0/y+JXrUDyjSjqr
iDDUcFFK9enXIBGT/kJnKWHsPGh4I81Rg0oT3avq5YShZ/59R/v8e9QrWDTo
pi0MfHOtq2Ox79EhJQn6jnPCMD03e1p3phpFnOfyCQoVhgAjR+HYpCoUmLF3
dn1JGCZV+5bzZN+hMwqVHvg1YTBP7+Gpo32HBBpuxtlsC8PUZsfcodm3qHp6
sbf3gAiMhtdQnMt4i/6ID58uEhCB9NGFYBf2t8jmVcUphzMiIMjASBNwsALp
V7mdGHojAlnx0XZynG/QIUNpZ6ZqEXA0yNpI2ypDYyM/wo7Wi4Dv9RMXNEfL
kM+eVWt5pwi8GZvx3sksQ6/RyWNxP0RAyUMqI1GuDAl9kjQwxImCB8ww7Jwt
RWQD36DGVxRiaca/ad8oQcELtVm+AaJA7XOm1lmrBNGSPaPQDBOFSoU015UD
JYhV1qKp4okotMQ0dx9IL0bioX3HSl6Lgk1YxizqL0KG2o3G2bOiIHw8PfWm
4Sv0+PlzqzATMbB6F+Qkfvsl4qoO+HDUQgza2iduW518idJ6LwscuCIGBXdP
uYxi/6vy/uP9FnBdDD55rfGXdOajygsJtn5hYuDQZ/EmUzIfjdGHuLjVisGN
paubRxfzkMQtB59z0uJwR9Gr/mlGDpLVmjTNUBCHeJOpMf37OUiFzFx+UU0c
kg/6lfFdzkGEqBOz94nicMk6+KSzYA6yzpE5V2glDqsWvJlm2c9R4uAfeYpH
4mBPV/xevTQbHVC9P1eyJg5uE1f2hFYzEcPu38adbXH4r7JK4tGXTMTa4J5u
QCYBpnkB/0nUZCKhUzZmowwScOFIeUF/aCbSsTf4SC0hAd26utOswpno1hP6
jEvmEnCO7UbSfkU6mtlIOk//QQIk73E+7vycirL1lW+Of5SAVqZkoXt5qehy
dPejknYJmAyaZ37gnYpGxA60mQ5JwFCDCMVNnlTUZ+qpnbYmARYelIHUdimo
ttRISFZaEmSD+CPdDzxFSdfJF42TJKGMg3hl7m4iOleVRi2cLgl5L4+WFF1I
RKwHNETXciRBoOzeWrliIopJc7NKKpOEG7+eFgTPPkHBHaPdk12ScOjF+B6f
6RPkfvjtG3cqKdD95zo+oJ6ADH+43I33kALG3QrVZJl4dPSu6KsjPlLw6+Zz
MYND8YjAMTayeU8Kq7/SYrGVOKRlcErjYpQUpOkd0vctj0PSufJroi+koIhv
V/Q2ikP09utOFWNSoBbcKuJiHYs6Z+6eGzp2GOIb7wkb+kejVn+1oAjjw1Ba
mGeDOxmNmtiXS3XMDsMzFPFJjSca1Ry5wpRlcxi8L3J8dq6KQq9yCO3Odw+D
G4OSaPxuJIq2o4HdssMwdUdTzSsmAhnPxOIFBKTBdVdwmu9nKOrEzwxaiUlD
kJdn6HRzKDp5U/1eqrQ0WEaeEZnODEXHKSZ6udSlgexN6lz0hVBEEMLfZjsj
DXGHvvvEtDxEqlbN9QcDpSFpZGJ7oTQElT/ncjkWJg1Sg0nekrEhSOmnK9vD
GGloDTFsf+oWguR8WR0oU6UhQMH8NL9MCJJKvkz/7400VC+u5r16GYzyJsvK
daql4XfzN6tn4cFIXJLa2q9eGurs2JM6nIORyNtXr7c6peGvOMPEqnQw4hvc
Nlv7IQ3bXs4xpaVBKIX31L7ikjSE/Lf4ZSwhCHHbZua7/5GGn5L0gxR3glBy
wdrZki1paJzY2PW3DkKcf47u/vonDTundb62GwShBM2UHJkDeFhpYUYv5IMQ
W8CvU670ePhiXK3Izx+E4lvh70sWPFwZYbArYQpCzMwJmfM4PAj5KIw8pA1C
MRfmTkgK4GF9lGviE2MQYszQWrMXw8PiSYY/S0JBKGo2Oi1HGg+iT+MU3U4E
ITq5KYPvCnjYdWJ0fhQbhMK8VJaF1fFQ+IJGM5EyGFF/CE2+oouHp3E3le9W
BKNgqlH9DCIeyv99y1ZsCEGURnI/x0/gQYRcxrzNKBQFPg5I4DuDtTdW4I2K
Dkdko4O6F8/jIU+/MlmtKwrdE5Gae2qFB0k1Eb3hd7Foz9kvdsgGD9LZgqvt
e4+Rb2m3Js4ZD2/M+rdbwpPR9pbwd7MbeHC1t5oVbU5HPuAVleCFB2dZ8q9s
cc/RZmir6oAfHuzexqrN071Et3p4J1kCsfGmxgLOkL9Ga5w3ws6E4eHBhVt+
TkblyNO6UfFRDB5ev/r0hsOlCq3kcox2JeDBfDeXWH26Drn9cgpmSMVD9lXT
0vC1RuzeWCN7MgsP02dnf7qHf0KLH20etBbhwSy9IiTkfDcSjBtyiSnHwzNN
KRkThz50ztrY7Nx7PEDUb5+HRQOodktT+lsrHkYHkhz9jYdQvCzL4N/veJCa
o/w63vENaSfVSUryyMBWtHyWRu8CinLh6wl5KAOZ30Zb1WADNajHV52MloHc
/wborGs30CbVwRyWBBk4MPfR7rX2JrqSsebzLEsG/uvt2xtV/otUBttFKmpk
YO2tiJsXzzYa171ze+aPDLy8WB462bCH5Fi+8BMvy0Lb7TWmYw3kMBs9G/jE
XhZss4Z9fq+QwzO6v3NzrrIgkibYYShEAQxUXGVRPrJwvaCVXOweBSxuWhz9
EicLjP/OxNqrYfewsXE35yZZYLAiMIc/pQK+/B91jw7LQRcFRd5JWRoYFNsU
m5aXg//edbA7naOByCzqCBU1OfiRvDZ71I8GdlIkzw0T5GDj+l2VU600MBTt
PC9iJQd/Z8/2PLx8EB7f/MX8NkYObn04I0IWRAt0aOPq2JocDOyxud7NpAcf
famDb3fk4MZV3tPEj/QwS7xY/IhcHn579gx0/aCHxuMNOwQmeaA7fu+KkjQD
+JpEP34pLQ9g/2XiyGsG+Gkv3nz7qjxcjFDy/F7KCJ1RZlIsPfJQ2h3lEB3N
BFqPwroXP8uDagz374yXTJAf9/5W05g8DGV7RAY2M0FwonCD9yI2no2AcdUe
Ewj0bsosUyhAIPnjKV8VZvgy3NhsJqAAB7+eTvROY4Zjvyz/ipgpQDwVLs/b
igXS2YMG7psrwKO/E/1Jjiywrl1YMnZRAST4gi1zPVkgM2LXMdFGAa4sy/4N
C2OBHcm0IVp3BeCq5GzyesMCr2zGq1YiFKB/v21j/wArMA9d9q+tV4DQ1ut7
6ems4LAfas7bpAC+n7aOPn/BCjUSr1V8WhRAzUHWK/k1Kzh7kf1S7FaAFVz0
lFkjKzSyZl3KHVWAhBKhCsEfrHDr1LRe1KYC9FCVPaGSYoOhRjtySxlFsGBO
C614zgYr+iM8d+UV4cvuumhoARvQNJxWyVRSBEPPXE7jUjZQq9NynNVQBMfS
YaipZYOE98xdngaKQDwr5cU7zAany2uSI60VgWVF1W+Nnh0+5bIrfIhVhLZo
7xteLuwwIRZx4ttjRSizokLM7uyw8XzfhjJJEZ5zLRpme7GDWPbikxPPFEEx
986ZVw/YITC9fvfzS0WQNxyJtkhkB72kay2/GxVh4iASEqtnh4qwJmuhDUWY
g/v+/YwckG/YwRW6pQjzZgPdvawckMLQ3/9rVxGeJksVfMJxwIPYyaPvKZTg
YyuZ+lNhDjBK3pE7z6wEf0ai0KgKB0y/UNiPxCtB52mtkQkLDjjUkpbx96oS
nDcq5IF0DiAPf25hba8EdvNCGSeyOWDdsICt2UkJ5kzTThrlccBw97vQ+BtK
8DIgwEi3mANyvvTfkL2rBCsv6dR6PnCA1uxBsE1WAq1/LEo1oxzgcMDrW3e3
Eji2mgscYOMEHsG2r7t9SkD5weUWCycndGvw90h9VgLeBPxfLm5OULvW/CFw
VAk28nWyuQU5gXqAI1VtXgmeeDx2nJbmhNzMt2bp5MoQvnV5L0mfE2a0t9qv
qyhDTZ96aJMrJySbGTWmqCvDZ+dQ+yNunGB0I7OqRUsZqITEjOvdOaE8+3i+
sL4yFPgbXnjlxQnBtE9DPp9SBjMWzy2z+5wg9lUTdB2VwcmQcWk9jhNsPf0q
GFKUofARoTu8HJuf0kTF4WfKYBosrRT1lhPo/sDbo5nK8GiL1yeykhNee1C/
e5CnDBM84bUPajhhzz2ucr1MGTzmumuPNnFC4o0X78c6lCEBt3f7yAAntF0b
aHj1nzIIOA1Xii9zQpqMWmMbmQokhDrIdq1wgvtScuMspQq0U3cze/7hBM5r
1h+F6FTgllegcvkGJ9i4LjQlcKrAO8NxU549LJ7zfou/vAqkR+lc9DiIA3lH
fLfRVRV4IxNYZieIgwlnwRtFdirQwi1TNyGEg6hrbMyHnFSAyXvf+LwIDhY8
ds/2uKmAkCQPrZ44Dp77d3w+64/Fm5y5tCKNA1y86/j5JBUQpeKQnVHFwX5N
4dKVLhVw8hGrFTHEQXFdRnRDrwqwnTgycu4kDqwaH8uJDKrAqaz2tWAjHFS1
+Ll/H1GBuPEW/KQxDm72n1y3n1eBRanXB/1NcTA393PXhVIV3CSfIEsrHPSw
ytB7aaoC45/P+bXXcKB3/fpCqo4qFBW/psy7jsVrKW5pRKqQUJ7zJ9INBzH+
isHMR1WhbyP/iak7Doxm1f4rNFEFk4ZB2f6bOGiv0l+edlWFYc5TCTG+OGi+
cmHgTLoqlKnMbrOG4kDlfXKpd5YqHOZu3+jFnMMx8ig9RxUiRro+RYfhILjd
ymipQBVqTicsU0bggKBi0xz6ThWiQiofTUfhoJ7m+rvaXlX48PnwC5d4HLwv
DkyVoVSD9AdzPGVpOKA2MuNJolYDyw0aiYvPcHB2QfIpOZ0aEK4ys1CmY/mL
diV+YVaDDNWymNMZOGB7iot/IKAG1R6HL49m4cA16FXYoKYa2NXnHajPwwGv
+Rcvf3c1IPN6fbWtBAcOG/nrszfVwLvMdensaxyUxvvdPOutBk9eN8QMYz7W
JeQhcU8N2oq6hGZLsfUnuF7rjVSDxIRvL9bf4KBDhsxW7IUaFAXxhsy/w4Ef
ufSZznE12FlswanW4WD2CP2QxJQacKfOXM3CfCZs6XLAjBq0R9/+y1CPAzGm
khtqP9WALekM7TTmTj6VR5lbalBVh2aDGnEgoKHXfYtNHcyfCfi8aMZBo5uJ
Ef8JdUh1iIv36sCBTJnyoLeROmT/rLDtwpy4wW7Vf1odIs6LZot1Yvn7f3UN
Pa8OOC5flz7M7BFWkau26lDx7T5BrBvLP9ehvfmeOgzpKI6W9OKAbsz3uFs5
Nr7I8JbdZxyoeb9kfPROHbrD+J1eYL7KOtRfUq0OUuTlNxYwVx5XvbRajzn7
lOG1L9h4Fcset7rUQXPHXe/6Vxw0xNil+s5i83lp88pqGIed58a/H3JpQNwe
9cDGGFYvY/5vXvBqwGyY1m2Zcax+vQt9WgU0YGxCoMkGs0TxQUo6cQ2IKaK0
6cY8wPMRF62oAcIosDxrAgdy6+r6jw01YNfvtoTmNxz8yBNOyPDXAAq8c6Xc
dxwsBU9tUz7QgPELEu6XMf+xybrsFKQBdI+uf36EmUxQGK8YoQHay9UFy5h5
koQaG5M0QFdb/VHhDLZfoYIrP8o04KvozFv2WRzUOPIbySxowPEyfb7X8zj4
aDBeGrukAdQ8ciFfMbeLPsNtLGuArdHVwn+Yv07yff+wqQEXhSwVjRaw+Bf4
fE9TacLeSov8DGap47z5noKaUBAvaX7wJw4SpLipqsw0ocZXVU/sF/Y+sJZ4
8d1cE26Y2VAQMIslKBsestKEmer7SZcxl++firW10cTOhQrVFMyDXwL5Dt3Q
hK4gaUPG39jzELKkYhumCSk3tNh/Yo6fqrNnfK8J81saXKErOLDEdR3UqNWE
RjWZ4AzMIqdGCm0aNEH0WFDbO8xlleur71o0YRp3ZmoOc/+jw/dsBjVBmYre
6OgqDlj0Hie++6UJ9Je1iHuYY1McWq4KaQH6Y2hkvIYD79uBN/1FtcAtcHvl
KmZrk3TBJAktCORQ8/bCLEP3xbtTRgtujrMfTsPcdsdASl1TC9TEIiTnMVNY
iIUzmGiBIP2lSt91HHjhpg3fBWmBY6aTbeQGtj5r/232PdSCkYnTcamYj/Rw
P18K14IfFGJ5hZhZQ8/uCsdqQcBjmZAOzMWb9YVRaVqwtLfKR7eJg/nPGQw2
FVpwT3huMBCzZcKlboY5LTiyXOds+xcHfG/oeF0XtcBr9tmEB+bJvneObb+0
4NpVOe0HmO2YWMkfrmvB8yiaV2mY3SI+Ke+Ta8O/S/vug5gDH8g/XeXThioe
6UK0hYOX18jtvphoQyIwLx/YxsG1yOLXKue1IYLHMZcFs1zBxf/iLbQh1IP+
OD/msrmKxNNXtOGse62JCuYaG5e21uvaIJtrGXAVc6/5gNz7MG3gjBq4XIl5
60judkatNkyK6+2b7+DA/31GUFODNrzr0Ry5iplMKYVxoUkb7J3OvnDBTCP4
SFipQxvi3aW4/DFzbvucaPqqDcfEGs+nY1YuMno6v6IN3y2oLb9hduNY11AU
1YE3VZT0F3exeo783WgmoQPXferO2mD2olgw8j2sA1YbHNHOmP2Xx698lNeB
Qd4vU96YI9tawsx0dOBQlfeBBMz5d1OH7pjpQLXoD2I75u8/CD6NoTowbhTN
Kr+HnRcZ3dnSkToQ6asbrYo509yyKz5GB+43r+9pY7bu8BCxfaIDPa9q3h/H
PPI6s5PyuQ5oJERXXsXc7/dPyKBWB4wvs9bGYW5kqW5rWdeBVyVpNxYxC3cY
rMtv6UCmPf+rZcwPgvsEknd1oEzm4+Q6Zr2/8zedKHQhPfWNzD7m6jGcAC2z
LlCoPbdm+w/bnxdenoZ4XTgjlSSnhTlbV5G366ouPL2UOR6AudGYLmjXDutv
49UXgnn68vfFw066cLuRri4cs2jgk+qHbrpAYM4OjcOc82nbAvx0QV0zpCcT
c+7pxuQ3CboAlV36tZjzr5pyprTogsLPpV/rmFs9Ze61tutCofVx/Bbm+aAD
s5tduuCgHGC7i1kq712F6aAumEsVN5H/w+pvkdeMcUoXLhj8NDyEueDmzOMH
O7pgLDRyXQJzUYgXi6OsHvTajOuZYl7SuRQYoqAHKSedhs0wy6wfWXuurAcW
iT9umJP627B//qapB6tVfbGXMOejN8mWR/WAne3wc0fMOdsrgsaX9aD1dByT
H+aU69fkVOP04H0grXwG5hGxcxmmCXpwhTLBNAsz95g2s2eSHtTdabn1HHOy
If2f4md68JlNr+gF5ieSBRVSBXoQF7+7WYI5dmpOh++jHizaHvlThznUzPYk
5YYe4E65F45jzj49ZmW/pQeVb3cTJjHXnDBza9nVA6MNI78pzH90j8VFUiAw
zDDT+4HZSgL/lY0ZgYdTbPoSZqW/f2zE8Aj4JxQ7dzBPJAf6GlxFQKNkQMax
j4Pt+N3IF3YIGn4ERHFiZo++9YzWCYH2G1FOLswnAhzqu9yw3yvyhHkxlzsb
Up/3R2DJwssjjDlCizXeIQnB8AwhQQaz6ljWy9AuBCOMH9r0MTPLOW2V9CLg
fojbIGBeui93bGgAQTHTM4EjmHNE389IjSBQm1S5dpQU33VQsH0WAYvJxKoh
5h1/ypPUZABHrUxfmmIepldrOM6NXWcr00ZsMX9SeTo/xgNQc/B8rx1pfpf2
mDz4ACguRzXZY44tabR+Kgjwzdg33xHzcdPTewviAOWJ2daumCtTnNQjlQDM
Ko0eemJOPpxa1HUSwHw+vO8+5vW1o7lBpwAUJblfPcB8uvZPmuZpAPkWpZAA
zNSmhlG5JgCdBkzKQZi9/Ldd7loA/Nt9c/chZpOeC1KyjgCDaLo3CjODF/vz
qEAAQqbp/WTMTqg+hRAMcD6nX/4p5o+01+K3QgBu04lNkuyb/jHALhyLN2qg
lYp5ocXzik4sQG52zfQzUv48ffxLzwDGXeT/ZWO+Xx+dfLIKgN78zbVXmBfH
6xO2qwF+6WdvkXx+dy32RQ2A0Ye8oCLMMmqW4ZT1AFKqm4nFmIcKJXzff8La
N3wte41ZKanuIn4QwJ59sb4c8+z1VQH6ZQC/Tx5Qg/lspBhv1QqAGttUKck1
+Rdwjn+w9T32WOQD5sffPzB93AC43tZEXosZLCLI/PYAfg/7vqvDnHJEdHqR
Vh9oHkiRf8R8itcst11MH647qnC0kfZjRq7+ooQ+MKlsuZA8U3RwdElSH059
V60n2R9qmJnw+vDbW8S5HfMre1F/U0V9WLk0XN6Bme71qsmYrj4YpQeqdGNu
ORJD9vu8PpjT9A33Y2Y95MR731wfBJ6YCw1gtv6qr8ZsqQ8vEjwcSN503nBV
uqQPElGWqyRLPLL6ettWHwr7eSg+Yw4eli7ev6EP6dfmmb5i1ndrucgSrg8E
SrOpEVL9Di0cbYrQh7cqCkKjpPokMih5R+mDsmuWNckS3GcPjj/Sh++2x0dI
ZmgaKc9P1AfDparOMdJ+cP9mhBx9qEt5mz6B2b2Zvd6tTh/SfN13pzBLK6gX
CjfoQ8ALkJvG/D3FInGwUR+0a6uvkHzePf2a1id9+Che0kSyDq8UN3WXPlw0
KAj7jvmgh7bnsxEsnyVP8h+YM/hsxDo39GG/rrpqDrOWMl7O5q8+/Avj/0by
4Il19a0tfdh0IFLPk/p7PzwptqcPVePDZ0l27yvw9KcgAAuPzizJ8HCtXoaJ
AL8WpKgWMU8vB1+KliLA0Upt3BJp/6iNHUWlCXBy850ayZz8OI8qPAHK4inO
k2xo+DL4hxwBePcpE0guy+kq1FUlQMDZOsZfmIMsOHd+6ROgQdVsi2Sxjy8S
jS8SwKF5vnAZc7fMVs6YFQH+E1NvJtkn8fgbF2sCROhYT5Dc4bzQ8/AqAepS
1ZlXMHsy42nrHAmgeU7Ak+S6S8V+8rcIkOm2IbeK2XKr/ApzNAFSHxnG/MFM
ZXPgRnoMAWRfiTwnubjD7K5MLAG8rUfekUyesfn0+GMs3tGFbyTnG2gMPHhK
AGWvCMU1zBvx7w1WcwmQ2EvVRXKsbKN0fy22Xhmyv9dJ7TUu0gbWEyAysp1s
gzQf4vqcYiMBKO8cZyP5t4VEblwzAaQm59RJPvkwQvBsJwEUA6vuk0w9acLe
O0yA4dAe2k3MfrHf/+taJ4DOW3Lav5jjU/3H7m4SIOcxGxfJBXkc72W3CPDw
H70kyUM1x3yidwnQpVB6hGS1hcI/RhRE2Fnru0fyiv6tuQ4mIlyzSPhNssMa
VV+bNBE8FU582CI9TwVHuq1kiCBzpKSV5PNXgzuWZYlgfJNykOSjPZSfOBSJ
YB9xe5FkiUKK91fVicDoEsG5jfmHDVnuNpEIfVfuu5Js17/rc/gSEXwrz9Lu
YLYK175dY02EwJ+vWEk+B343T18hwge3bV6SjxTvXPeyJYJDp4McyWIR2zYN
zkQoKXtiQvJ3/b9GFreJIBlrmUyyTekfofBHRNBgZuTZxXwt0HTPMI4IPANZ
IiR7mZZ/ZXhMhKFASTzJYRteMbGJRGBjotYhuVhzezfpGRGqclkvkbzdsP8l
r5AIHuIP0kiO7WeIbmohwn2+Syx7pPff8+tOD9uI0MEHXCQ/v9VNPN5BhAQa
nCDJbzljdzq6sfi/MmVIHrNkcxr4TAQnvOQxkiW/cxOnvxPBjZnJl2SFcl+B
nB9E0JHUekCyVsjotv0cEfxdLB+SbCT57PXCIhH6P/nGk+zpKiSwukoEXTrd
ApL9dQK2y9aw9a9ke01yCOP04K0NIpxQ/lZBcnLJ88itLSKETls2kJz9gMqx
eocILXq0LSQXnrUn+O8RYbWyqJPkcpFP/Hr/iCBuf7yf5No1ie39fSIEXRj+
SvL/aRvrQw==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
0sh2tIlK+CL4OHfPSDuIvpx6ZPJMCdMdYXEmpx0Cnldu/MhRQpUfN4z01duB
kOhc91+1EpobqzPqnfgOJQ9qbAWXlHAuLaL7gnsrZJs2coWsKqEOtxFw6LZC
MmN7+78NJTTw9toW3dUK/tEDhmU0ynjapXbv4ectYJa0Tqlkysiga/ygpq0Z
/mQpksNklLF30XLgnUET7K17mrJyQRlNVO5ajTh9A+qHaadsLymjYKlhaDN+
g0XTV2y1V5TxsTJtI5n9G/S0vA+JdaV4289Fr6oe0n+2u8rdUcaPBWHR+3jq
QXuMHu2TlLGsNtY9p+8rOOz0HGxpUUZUXrubHFEDBwS+dW18V8aqOodplms1
0KLJ1yr5g/L816695WY1oO5c+ymgTxlHn9BM5DLWAF0H+xP1CWVMkPT7NBr5
BTJevLN+Tq2CwxPbe+8/rYYRndWGa6oqGDHhsXCxtxKSrM2qkzVUMHO/y+P3
nyvBzPXFxzptFbQdfRWgmlEJxS+Ns4WIKvjXYJAtz60SgnY/vv/DXAX5y1uH
Q3dXgmiXFupdVkG/Gv2Rx/crwP66TwljsgrS+p/WdUorA3Xl3yVSz1RwQ6yB
KsS7DPbM4zvDFyp4ti3VYtS8DN640733z1RB19qb7ZfXSmHTLebDYpEKarFW
0N+yLIUE16yy/kYV7Eokp3mzfYRvzh1VeVsqlPV2fPZE5Tt4Kqte/Y1KFZP+
BrbRP3sHbtNJ1WO0qrh5Rtt39tY74HC2/SK4RxUNI3/9Z6f6DuycJmviOVQR
mQ+aN+aWUPYncp2vgirWGdUfsUsvBoXLMi1mF1RxUPRlyu3SIvjtKOCaf1EV
Y0+mli8mF0G4Mxvz3iuqOG6bsZDmUwST7htHW11U0WI1zOCFXhGk+Tb+OOqr
irxzgTF0NYXAGev063iiKm7/5RHR7X0D5PLc6fPNqviCy3xF0aoACj6nRFS1
qeJrLVsPUaECsKmOkxfuVEW2gz+qr/2XDx/rfNyGe1UxM1SkmPwwH260H1q8
NKGKj0Vtd7PW5sH4+N+Nq7RqOP5OLeSWaS60ssoyeGqpYSdbzcWsyGwgXLs2
+URXDX+L3TnOeiUbCuoK6qpBDf35VlY+ErMh0lcpiNlQDdWFR79/WsoCszH1
rdxjaqhDzE+MOJ8FDR+JM3+c1LCvnYFnAzOh9vyJjiPP1fD158mDSdLpoFqW
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
u43wPx1djDA=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[2], 
            Thickness[Large]], 
           Line[CompressedData["
1:eJwV13c8Vl8YAHA7s6xsXnuP197O433TQISMSrIpDUIJlRDZIyGFMsqIzF9I
ssrKTLJS9kjZm/yuf9738/3ce885zznPPfc8AvY3TJ3ISEhIIrCfg//Ue/ZU
8o75Onl4B24SEh5o/MpvaMkfhqxiLlQRqHhg/3NNED//U7TzKb/al54HUmuj
cJT8uejMMIzUc/CA9IJj9L7LW1T699ZAIx8P/Dic9m/3ewkyElH+HSfMA8Kv
aFS2d8qRev6C67QED1zV9r62gatEcW8P/xWV5YHS3l9Zq8RqVMRoMb0uxwPb
bobDSy4fUa60eeeANA+8IB0O29CrQ0XXHPaCBHjgWHucyPr3enTZ3Jf6Jx0P
zCSfqFu93Ijkk02Mtua5IdJxz3pl5xMa+6mhvdzEDXh86eZSVBOyoyt9lZ/O
DV93XBMWcS3ogUD29B9vbrjVxIdfKG5FVF7cuZkG3MD1uLftD/ELCj521FhL
gBvsJYH8t0sn4uz+ltf0hQt83tBVLn/vQY77KmwxolxwaGhM7A9uAGleyzm8
M8kB/bUfvOdnBlDVzr0iko8ckPcqueF38SDS25m2ICZzgNFNo0tzxGFkcNJR
6Z4BByTSVCVOu/xER07IT30sYwfm581kS9/HUP3qaqJgPBu8bE33+I2bRU9e
5ljtebPCanK55M/IWfTP33RGz4wVjru0jfdszSJ2kwDbFjwrzJNvmFd9nUO7
LYq37s+zgJq2kUZY6Dwy1YrzTHVmga63u2RiCwvIVh7fY+jEDPdbpfXlL62g
YLMTfFthjJBT/E40/8kKUjR5ojp7jRF6kgnkIl9WkEbm4hS1KSMIu1hVc6iv
IlyCe/s3LkZoJQ+WJWFZQ9nXaGI1Lh4BNu0h5s7P6+jqwHy7zgcGKHwbNnRV
dhv5sSStd1bTwhzzXKS+3TaS6lC19YinBbFb+jriCdto/eqTSXNXWnihRfdy
fGsbxTZH5k2x0kJ8S6Tz+U876D+W+L/cHjRwazxm6YT1HhrsF5vxU6aGdLq2
ICY9Eih3NFq/9JsSdLT9rANsSEDBsnsns5kShq9LKS/cJoGpgKOkuFeUwNET
MfUljwQUf3tVV9hRQlyy4alHjKSgzMX2w2OIAoJEOg7vD5FCbj/TdnE/Obig
7qfzN8nBgHJuR3GTFEgy1quGIsjB92f4wslhUkim4BluzSIHUd4yrbBaUmhu
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
duD/Ac4reAk=
            "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {576, 192}, "Axes" -> {False, False}, "LabelStyle" -> 
         Directive[FontFamily -> "Franklin Gothic", 11], "AspectRatio" -> 
         Rational[1, 3], "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[2], 
            Thickness[Large]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> {
       Thickness[Large], 
       Dashing[{0, Small, Small, Small}], 
       RGBColor[1, 0, 0], 
       LineBox[{{16.3, 0}, {16.3, 10}}], 
       LineBox[{{28.13, 0}, {28.13, 10}}], 
       LineBox[{{40., 0}, {40., 10}}]}, Frame -> {{True, True}, {True, True}},
      FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, LabelStyle -> 
     Directive[FontFamily -> "Franklin Gothic", 11], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox["\"\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"x1", "x2", "x3", "x4", "x5"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[FontFamily -> "Franklin Gothic", 11], FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Franklin Gothic\""}], 
                 ",", "11"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.925294668727161*^9, 3.925294738251737*^9, 3.925294901602511*^9, 
   3.925298190523212*^9, 3.925298223812532*^9, 3.9252983720229816`*^9, 
   3.92529859066164*^9, 3.925298648551899*^9, 3.925298761354802*^9, 
   3.925301385334609*^9, 3.925301415530488*^9, 3.925301579444228*^9, {
   3.925302911978415*^9, 3.925302963301044*^9}, 3.925304059600839*^9, 
   3.925359934510142*^9, {3.92536005727627*^9, 3.925360099410718*^9}, 
   3.925363439169559*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"7132eb30-c29d-4c05-bebc-9129c6725f39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"ThreeExperimentsBinarisation", "[", 
   RowBox[{"IG", ",", 
    RowBox[{"Values", "[", "EXP", "]"}], " ", ",", " ", "stablestate"}], 
   "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "voir", " ", "la", " ", "fonction", " ", "dans", " ", "le", " ", "package",
     " ", "functionsneeded"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.875332241601202*^9, 3.875332243821009*^9}, {
   3.875332279260521*^9, 3.875332303297493*^9}, {3.875595844559997*^9, 
   3.875595847592098*^9}, {3.876803589083991*^9, 3.876803589778937*^9}, {
   3.876804431255443*^9, 3.876804431719125*^9}, {3.876804569196492*^9, 
   3.8768045698194733`*^9}, {3.8768046329634533`*^9, 3.876804633405821*^9}, 
   3.876808981832257*^9, 3.87680996887482*^9, {3.876988908876504*^9, 
   3.876988910322257*^9}, {3.876989936415477*^9, 3.876989971999378*^9}, {
   3.876990193192268*^9, 3.876990196735999*^9}, 3.8769905079557066`*^9, 
   3.8770854415005503`*^9, 3.8770885536478777`*^9, {3.8781996042829695`*^9, 
   3.878199616870785*^9}, 3.878199955040737*^9, 3.878200111584036*^9, 
   3.878200455067952*^9, {3.878623918382945*^9, 3.878623925664798*^9}, {
   3.880435897301106*^9, 3.880435898581001*^9}, {3.880440721111033*^9, 
   3.880440722914543*^9}, 3.884181599113492*^9, {3.925294659809265*^9, 
   3.925294661548192*^9}, {3.925302946396473*^9, 3.92530295731426*^9}, {
   3.925360650545747*^9, 3.925360670797178*^9}, {3.925361094597417*^9, 
   3.9253610955373383`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"b355db78-c031-4037-9b51-dc1049ee85b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "False"}], ",", 
     RowBox[{"x2", "\[Rule]", "False"}], ",", 
     RowBox[{"x3", "\[Rule]", "True"}], ",", 
     RowBox[{"x4", "\[Rule]", "False"}], ",", 
     RowBox[{"x5", "\[Rule]", "True"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "False"}], ",", 
     RowBox[{"x2", "\[Rule]", "False"}], ",", 
     RowBox[{"x3", "\[Rule]", "True"}], ",", 
     RowBox[{"x4", "\[Rule]", "False"}], ",", 
     RowBox[{"x5", "\[Rule]", "True"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "False"}], ",", 
     RowBox[{"x2", "\[Rule]", "False"}], ",", 
     RowBox[{"x3", "\[Rule]", "True"}], ",", 
     RowBox[{"x4", "\[Rule]", "False"}], ",", 
     RowBox[{"x5", "\[Rule]", "True"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.925294668865842*^9, 3.925294738377219*^9, 3.92529490200296*^9, 
   3.9252981905970783`*^9, 3.925298223885585*^9, 3.925298372077156*^9, 
   3.925298590722781*^9, 3.925298648869087*^9, 3.9252987614115458`*^9, 
   3.925301385395058*^9, 3.925301415589294*^9, 3.925301579507706*^9, {
   3.9253029120369596`*^9, 3.925302963372128*^9}, 3.925304059670274*^9, 
   3.925359934741527*^9, {3.9253600573348494`*^9, 3.925360099471377*^9}, 
   3.9253634394408827`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"54f3769e-75ae-48d4-8ffa-fec10c7e579c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"profile", ",", " ", 
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Values", "[", "profile", "]"}], "}"}], ",", " ", 
       RowBox[{"ColorRules", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"True", " ", "->", " ", 
           RowBox[{"GrayLevel", "[", "0.25", "]"}]}], ",", 
          RowBox[{"False", "->", "White"}]}], "}"}]}], ",", 
       RowBox[{"Mesh", "->", "All"}], ",", " ", 
       RowBox[{"ImageSize", "->", "Large"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Axes", "->", 
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}]}], ",", " ", 
       RowBox[{"Ticks", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"0.5", ",", 
               RowBox[{
                RowBox[{"Length", "[", "profile", "]"}], "-", "0.5"}], ",", 
               "1"}], "]"}], ",", 
             RowBox[{"Keys", "[", "profile", "]"}]}], "}"}], "]"}], ",", 
          "None"}], "}"}]}]}], "]"}]}], "]"}], "/@", "result"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.876988964172089*^9, 3.876989103863776*^9}, {
   3.876989295238519*^9, 3.876989476069954*^9}, {3.8769895066343517`*^9, 
   3.87698960763737*^9}, 3.876989671176545*^9, {3.876989981970088*^9, 
   3.876989989792108*^9}, {3.877085698103789*^9, 3.87708569920274*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"213db4de-e81f-4591-b8d0-4c7d9e3071e3"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      GraphicsBox[{
        RasterBox[{{{1., 1., 1.}, {1., 1., 1.}, {0.25, 0.25, 0.25}, {1., 1., 
         1.}, {0.25, 0.25, 0.25}}}, {{0, 0}, {5, 1}}, {0, 1}], {
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          StyleBox[LineBox[{{{0, 1}, {5, 1}}, {{0, 0}, {5, 0}}}],
           Antialiasing->False]}, 
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          
          StyleBox[
           LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 1}}, {{3,
             0}, {3, 1}}, {{4, 0}, {4, 1}}, {{5, 0}, {5, 1}}}],
           Antialiasing->False]}}},
       Axes->{True, False},
       Frame->False,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Large,
       Method->{
        "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultPlotStyle" -> Automatic},
       Ticks->{{{0.5, 
           FormBox["x1", TraditionalForm]}, {1.5, 
           FormBox["x2", TraditionalForm]}, {2.5, 
           FormBox["x3", TraditionalForm]}, {3.5, 
           FormBox["x4", TraditionalForm]}, {4.5, 
           FormBox["x5", TraditionalForm]}}, None}]},
     {
      GraphicsBox[{
        RasterBox[{{{1., 1., 1.}, {1., 1., 1.}, {0.25, 0.25, 0.25}, {1., 1., 
         1.}, {0.25, 0.25, 0.25}}}, {{0, 0}, {5, 1}}, {0, 1}], {
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          StyleBox[LineBox[{{{0, 1}, {5, 1}}, {{0, 0}, {5, 0}}}],
           Antialiasing->False]}, 
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          
          StyleBox[
           LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 1}}, {{3,
             0}, {3, 1}}, {{4, 0}, {4, 1}}, {{5, 0}, {5, 1}}}],
           Antialiasing->False]}}},
       Axes->{True, False},
       Frame->False,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Large,
       Method->{
        "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultPlotStyle" -> Automatic},
       Ticks->{{{0.5, 
           FormBox["x1", TraditionalForm]}, {1.5, 
           FormBox["x2", TraditionalForm]}, {2.5, 
           FormBox["x3", TraditionalForm]}, {3.5, 
           FormBox["x4", TraditionalForm]}, {4.5, 
           FormBox["x5", TraditionalForm]}}, None}]},
     {
      GraphicsBox[{
        RasterBox[{{{1., 1., 1.}, {1., 1., 1.}, {0.25, 0.25, 0.25}, {1., 1., 
         1.}, {0.25, 0.25, 0.25}}}, {{0, 0}, {5, 1}}, {0, 1}], {
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          StyleBox[LineBox[{{{0, 1}, {5, 1}}, {{0, 0}, {5, 0}}}],
           Antialiasing->False]}, 
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          
          StyleBox[
           LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 1}}, {{3,
             0}, {3, 1}}, {{4, 0}, {4, 1}}, {{5, 0}, {5, 1}}}],
           Antialiasing->False]}}},
       Axes->{True, False},
       Frame->False,
       FrameLabel->{None, None},
       FrameTicks->{{None, None}, {None, None}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Large,
       Method->{
        "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultPlotStyle" -> Automatic},
       Ticks->{{{0.5, 
           FormBox["x1", TraditionalForm]}, {1.5, 
           FormBox["x2", TraditionalForm]}, {2.5, 
           FormBox["x3", TraditionalForm]}, {3.5, 
           FormBox["x4", TraditionalForm]}, {4.5, 
           FormBox["x5", TraditionalForm]}}, None}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.925294668943528*^9, 3.925294738449276*^9, 3.925294902052299*^9, 
   3.925298190632289*^9, 3.92529822392028*^9, 3.925298372103405*^9, 
   3.925298590763185*^9, 3.925298649134947*^9, 3.925298761676667*^9, 
   3.925301385655655*^9, 3.9253014158488827`*^9, 3.925301579766073*^9, {
   3.925302912303191*^9, 3.925302963410809*^9}, 3.925304059722348*^9, 
   3.925359934795761*^9, {3.925360057376885*^9, 3.9253600995112534`*^9}, 
   3.925363439486547*^9},
 CellLabel->
  "Out[25]//TableForm=",ExpressionUUID->"c450aa40-105e-439e-8354-\
7bd65e994066"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dis", "=", 
  RowBox[{"Distanceofdissimilarity", "[", 
   RowBox[{"result", ",", "stablestate"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "voir", " ", "la", " ", "fonction", " ", "dans", " ", "le", " ", "package",
     " ", "functionsneeded"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.877085833251296*^9, {3.877085876544169*^9, 3.877085880834223*^9}, 
   3.877085937833152*^9, 3.877089108574418*^9, 3.878200118720468*^9, {
   3.925361046882197*^9, 3.925361047365699*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"683db226-303d-489b-869b-cb2e9a46457b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.925294668976691*^9, 3.925294738491431*^9, 3.92529490206756*^9, 
   3.925298190642644*^9, 3.925298223928931*^9, 3.925298372111682*^9, 
   3.925298590771952*^9, 3.925298649175856*^9, 3.925298761735271*^9, 
   3.925301385715638*^9, 3.925301415911327*^9, 3.925301579828557*^9, {
   3.925302912385614*^9, 3.925302963420821*^9}, 3.925304059733745*^9, 
   3.9253599348052382`*^9, {3.925360057386394*^9, 3.925360099519484*^9}, 
   3.925363439496155*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"5ae075c9-e3e5-4393-9a2b-87516c7143ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 688},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.1 Inherited,
FrontEndVersion->"14.0 for Mac OS X x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2ad3b201-9b24-4c0f-8ec2-43a34f7b846d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 600, 11, 175, "Title",ExpressionUUID->"fc3a36f3-4f2d-4aee-b806-a1a93b7e19cf"],
Cell[1025, 28, 334, 6, 34, "Input",ExpressionUUID->"12191517-2d3a-454a-95ad-50cc0a6382b2"],
Cell[1362, 36, 244, 4, 34, "Input",ExpressionUUID->"4a3c0ec0-a87a-456b-8e1a-c8355dfb2a57"],
Cell[1609, 42, 1517, 21, 34, "Input",ExpressionUUID->"43afe147-ddde-4df7-ac34-a5fd2c07641d"],
Cell[3129, 65, 1580, 22, 34, "Input",ExpressionUUID->"931eb123-dece-4943-bd1f-c2ee0b5e66fa"],
Cell[4712, 89, 432, 8, 34, "Input",ExpressionUUID->"b0917b2a-0814-4397-9008-e6681c4e4c52"],
Cell[CellGroupData[{
Cell[5169, 101, 169, 3, 74, "Section",ExpressionUUID->"1ed3ea38-67d5-460c-b364-314f8922e507"],
Cell[CellGroupData[{
Cell[5363, 108, 664, 15, 127, "Input",ExpressionUUID->"2f1d5f78-cf67-4e98-88c5-47fc1fe23358"],
Cell[6030, 125, 925, 20, 38, "Output",ExpressionUUID->"3b45e12e-7223-4069-a205-d70d3bd3d5f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6992, 150, 175, 3, 34, "Input",ExpressionUUID->"726a9199-195d-4e4b-b98f-cabd1427ef87"],
Cell[7170, 155, 886, 18, 38, "Output",ExpressionUUID->"2a40171f-93ae-4eb6-acbe-2c7a26ad95df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8093, 178, 373, 7, 34, "Input",ExpressionUUID->"e7584e09-2758-4e6d-922d-bd8515d5be73"],
Cell[8469, 187, 895, 18, 38, "Output",ExpressionUUID->"16363cd9-9331-4f04-960c-14382989c614"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9401, 210, 373, 7, 34, "Input",ExpressionUUID->"e51dc69c-0893-4355-8d3a-6f75aa8c1b9c"],
Cell[9777, 219, 6707, 145, 414, "Output",ExpressionUUID->"4e447e9d-889b-45b6-800e-0139ce31804a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16533, 370, 160, 3, 74, "Section",ExpressionUUID->"f72b00f6-2370-432a-87b8-7fa64fac5873"],
Cell[CellGroupData[{
Cell[16718, 377, 269, 4, 34, "Input",ExpressionUUID->"faeae79b-b8d8-4352-b6d0-f855f719e610"],
Cell[16990, 383, 601, 9, 38, "Output",ExpressionUUID->"92d5ea8b-03b3-447c-9d3a-570c2c451d30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17628, 397, 259, 4, 60, "Subsection",ExpressionUUID->"310bd0b6-466a-4451-bb4e-e4f0f9076cb4"],
Cell[17890, 403, 157, 3, 39, "Text",ExpressionUUID->"361ee149-ca0d-4ca5-b699-172a71bae7ce"],
Cell[CellGroupData[{
Cell[18072, 410, 546, 12, 34, "Input",ExpressionUUID->"cb8cb7fb-2d38-42d0-9e41-9e99ff301bd6"],
Cell[18621, 424, 850, 16, 38, "Output",ExpressionUUID->"24eec657-3934-482f-9b0d-d69529e7b1b7"]
}, Open  ]],
Cell[19486, 443, 160, 3, 39, "Text",ExpressionUUID->"ae013f5e-d984-42ee-a2d8-48f19eefea84"],
Cell[CellGroupData[{
Cell[19671, 450, 594, 10, 34, "Input",ExpressionUUID->"f507d481-5b10-43b3-a499-113964d7ac57"],
Cell[20268, 462, 863, 16, 38, "Output",ExpressionUUID->"55d0c7d8-8c66-4b05-8fa6-8113ac2caf89"]
}, Open  ]],
Cell[21146, 481, 189, 3, 39, "Text",ExpressionUUID->"afbd4ed5-dc1b-4fb4-af5c-53af0a6f1a6d"],
Cell[21338, 486, 764, 15, 34, "Input",ExpressionUUID->"8d22ccf4-8d59-41fa-a8c7-7900cc26364c"],
Cell[CellGroupData[{
Cell[22127, 505, 532, 11, 34, "Input",ExpressionUUID->"48d203fb-91e2-40bc-9986-ac547a29fc52"],
Cell[22662, 518, 858, 16, 38, "Output",ExpressionUUID->"3d1da541-6062-4dc4-ae7b-fc3de44ac3ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23557, 539, 392, 9, 34, "Input",ExpressionUUID->"0cfd78bd-23c6-4140-9149-27b055c59ed0"],
Cell[23952, 550, 1136, 29, 66, "Output",ExpressionUUID->"4b249c40-baa1-4ee3-a95e-9ea82be6d3a6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25137, 585, 318, 5, 60, "Subsection",ExpressionUUID->"320d0900-0cc6-4823-911a-1a61e8254719"],
Cell[CellGroupData[{
Cell[25480, 594, 390, 7, 34, "Input",ExpressionUUID->"129d26e8-e092-4e71-a71c-10ce2f9e0e08"],
Cell[25873, 603, 865, 16, 38, "Output",ExpressionUUID->"af3ffce7-0776-4f0a-b5d3-2bde6482d5ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26775, 624, 482, 10, 34, "Input",ExpressionUUID->"fc252bdc-578c-4418-923a-61e40a90b0c0"],
Cell[27260, 636, 844, 16, 38, "Output",ExpressionUUID->"841e7e3d-9173-47ca-8ba4-7b31a806c7a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28141, 657, 176, 3, 34, "Input",ExpressionUUID->"f7888084-abc2-4a00-a0a5-dcf5a3734ce8"],
Cell[28320, 662, 894, 18, 38, "Output",ExpressionUUID->"4e55288e-4d9c-43bf-b5e0-84b42b415c99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29251, 685, 204, 4, 49, "Subsubsection",ExpressionUUID->"871cb780-1366-4847-b531-0f3c2fdb778d"],
Cell[CellGroupData[{
Cell[29480, 693, 4558, 115, 255, "Input",ExpressionUUID->"ade15350-8452-4de3-b73d-e17160941588"],
Cell[34041, 810, 2969, 89, 85, "Output",ExpressionUUID->"b831e081-1b3c-4aba-8704-40e7a22bc99d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37059, 905, 162, 3, 49, "Subsubsection",ExpressionUUID->"9559b6f1-b753-4bcd-9d85-17e588e8c608"],
Cell[CellGroupData[{
Cell[37246, 912, 1548, 26, 34, "Input",ExpressionUUID->"f222cec5-17e1-407a-9dbf-b3e818a2da25"],
Cell[38797, 940, 1898, 38, 62, "Output",ExpressionUUID->"af65ebe4-4f0a-4b29-b126-56f7854f09fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40732, 983, 616, 10, 34, "Input",ExpressionUUID->"9876b802-d28d-4bde-bd92-b4fe91115f6b"],
Cell[41351, 995, 676, 11, 38, "Output",ExpressionUUID->"6e16c29d-54a6-461b-aa86-d81f9d0760fc"]
}, Open  ]],
Cell[42042, 1009, 347, 9, 34, "Input",ExpressionUUID->"01f5534d-d548-4329-a2d0-f011ae2bbf0b"],
Cell[CellGroupData[{
Cell[42414, 1022, 2835, 73, 127, "Input",ExpressionUUID->"39a3c9ce-ca13-4862-ae52-65b4885644a7"],
Cell[45252, 1097, 220046, 3757, 267, "Output",ExpressionUUID->"7132eb30-c29d-4c05-bebc-9129c6725f39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265335, 4859, 1555, 26, 34, "Input",ExpressionUUID->"b355db78-c031-4037-9b51-dc1049ee85b2"],
Cell[266893, 4887, 1534, 33, 62, "Output",ExpressionUUID->"54f3769e-75ae-48d4-8ffa-fec10c7e579c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268464, 4925, 1606, 38, 81, "Input",ExpressionUUID->"213db4de-e81f-4591-b8d0-4c7d9e3071e3"],
Cell[270073, 4965, 5900, 139, 502, "Output",ExpressionUUID->"c450aa40-105e-439e-8354-7bd65e994066"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276010, 5109, 583, 12, 34, "Input",ExpressionUUID->"683db226-303d-489b-869b-cb2e9a46457b"],
Cell[276596, 5123, 632, 11, 60, "Output",ExpressionUUID->"5ae075c9-e3e5-4393-9a2b-87516c7143ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

